** (SyntaxError) saddle_points.exs:10: unexpected token: "end". "(" starting at line 9 is missing terminator ")"
    (elixir) lib/code.ex:321: Code.load_file/2
    saddle_points_test.exs:2: (file)
    (elixir) lib/code.ex:363: Code.require_file/2

[33mwarning: [0mvariable str is unused
  saddle_points.exs:17

[33mwarning: [0mvariable str is unused
  saddle_points.exs:26

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[31m  * test extract rows (2.9ms)[0m

  1) test extract rows (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:11[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mrows == [[1, 2], [10, 20]]
     [36mlhs:  [0m[[[31m"1"[0m, [31m"2"[0m], [[31m"10"[0m, [31m"20"[0m]]
     [36mrhs:  [0m[[[32m1[0m, [32m2[0m], [[32m10[0m, [32m20[0m]]
     [36mstacktrace:[0m
       saddle_points_test.exs:13: (test)

  * test extract a row  * test extract a row (skipped)
  * test extract other row  * test extract other row (skipped)
  * test extract other row again  * test extract other row again (skipped)
  * test extract a column  * test extract a column (skipped)
  * test extract another column  * test extract another column (skipped)
  * test no saddle point  * test no saddle point (skipped)
  * test a saddle point  * test a saddle point (skipped)
  * test another saddle point  * test another saddle point (skipped)
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[31m10 tests, 1 failure, 9 skipped[0m

Randomized with seed 0
** (CompileError) saddle_points.exs:9: nested captures via & are not allowed: &String.to_integer/1
    (stdlib) lists.erl:1353: :lists.mapfoldl/3
    (stdlib) lists.erl:1354: :lists.mapfoldl/3
    (elixir) src/elixir_fn.erl:150: :elixir_fn.do_escape/4
    (elixir) src/elixir_fn.erl:114: :elixir_fn.do_capture/4
    (elixir) expanding macro: Kernel.|>/2
    saddle_points.exs:9: Matrix.rows/1

[33mwarning: [0mvariable str is unused
  saddle_points.exs:17

[33mwarning: [0mvariable str is unused
  saddle_points.exs:26

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.02ms)[0m
  * test extract a row  * test extract a row (skipped)
  * test extract other row  * test extract other row (skipped)
  * test extract other row again  * test extract other row again (skipped)
  * test extract a column  * test extract a column (skipped)
  * test extract another column  * test extract another column (skipped)
  * test no saddle point  * test no saddle point (skipped)
  * test a saddle point  * test a saddle point (skipped)
  * test another saddle point  * test another saddle point (skipped)
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.09 seconds (0.09s on load, 0.00s on tests)
[32m10 tests, 0 failures, 9 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable str is unused
  saddle_points.exs:17

[33mwarning: [0mvariable str is unused
  saddle_points.exs:26

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.02ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row  * test extract other row (skipped)
  * test extract other row again  * test extract other row again (skipped)
  * test extract a column  * test extract a column (skipped)
  * test extract another column  * test extract another column (skipped)
  * test no saddle point  * test no saddle point (skipped)
  * test a saddle point  * test a saddle point (skipped)
  * test another saddle point  * test another saddle point (skipped)
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.09 seconds (0.09s on load, 0.00s on tests)
[32m10 tests, 0 failures, 8 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable str is unused
  saddle_points.exs:17

[33mwarning: [0mvariable str is unused
  saddle_points.exs:26

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again  * test extract other row again (skipped)
  * test extract a column  * test extract a column (skipped)
  * test extract another column  * test extract another column (skipped)
  * test no saddle point  * test no saddle point (skipped)
  * test a saddle point  * test a saddle point (skipped)
  * test another saddle point  * test another saddle point (skipped)
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.08 seconds (0.08s on load, 0.00s on tests)
[32m10 tests, 0 failures, 7 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable str is unused
  saddle_points.exs:17

[33mwarning: [0mvariable str is unused
  saddle_points.exs:26

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.02ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column  * test extract a column (skipped)
  * test extract another column  * test extract another column (skipped)
  * test no saddle point  * test no saddle point (skipped)
  * test a saddle point  * test a saddle point (skipped)
  * test another saddle point  * test another saddle point (skipped)
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.09 seconds (0.09s on load, 0.00s on tests)
[32m10 tests, 0 failures, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable str is unused
  saddle_points.exs:17

[33mwarning: [0mvariable str is unused
  saddle_points.exs:26

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.02ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[31m  * test extract a column (9.2ms)[0m

  1) test extract a column (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:31[0m
     [31m** (Protocol.UndefinedError) protocol Enumerable not implemented for nil[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1: Enumerable.impl_for!/1
       (elixir) lib/enum.ex:116: Enumerable.reduce/3
       (elixir) lib/enum.ex:726: Enum.fetch/2
       (elixir) lib/enum.ex:315: Enum.at/3
       saddle_points_test.exs:33: (test)

  * test extract another column  * test extract another column (skipped)
  * test no saddle point  * test no saddle point (skipped)
  * test a saddle point  * test a saddle point (skipped)
  * test another saddle point  * test another saddle point (skipped)
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[31m10 tests, 1 failure, 5 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable str is unused
  saddle_points.exs:26

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.02ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.02ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[31m  * test extract a column (4.7ms)[0m

  1) test extract a column (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:31[0m
     [31m** (UndefinedFunctionError) function Enum.zip/1 is undefined or private. Did you mean one of:
     
           * zip/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.zip([[1, 2, 3], [4, 5, 6], '\a\b\t', [8, 7, 6]])
       saddle_points_test.exs:32: (test)

  * test extract another column  * test extract another column (skipped)
  * test no saddle point  * test no saddle point (skipped)
  * test a saddle point  * test a saddle point (skipped)
  * test another saddle point  * test another saddle point (skipped)
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.09 seconds (0.09s on load, 0.00s on tests)
[31m10 tests, 1 failure, 5 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable columns is unused
  saddle_points.exs:26

[33mwarning: [0mvariable str is unused
  saddle_points.exs:37

** (CompileError) saddle_points.exs:29: undefined function column/0
    (stdlib) lists.erl:1337: :lists.foreach/2
    (stdlib) erl_eval.erl:670: :erl_eval.do_apply/6

[33mwarning: [0mvariable str is unused
  saddle_points.exs:37

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.08ms)[0m
  * test extract a row[32m  * test extract a row (0.08ms)[0m
  * test extract other row[32m  * test extract other row (0.07ms)[0m
  * test extract other row again[32m  * test extract other row again (0.04ms)[0m
  * test extract a column[31m  * test extract a column (23.1ms)[0m

  1) test extract a column (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:31[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       :erlang.hd([])
       (elixir) lib/enum.ex:1183: Enum."-map/2-lists^map/1-0-"/2
       saddle_points.exs:27: Matrix.reduce_pivot/2
       saddle_points_test.exs:32: (test)

  * test extract another column  * test extract another column (skipped)
  * test no saddle point  * test no saddle point (skipped)
  * test a saddle point  * test a saddle point (skipped)
  * test another saddle point  * test another saddle point (skipped)
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.2 seconds (0.1s on load, 0.02s on tests)
[31m10 tests, 1 failure, 5 skipped[0m

Randomized with seed 0
** (SyntaxError) saddle_points.exs:23: unexpected token: "end". "(" starting at line 22 is missing terminator ")"
    (elixir) lib/code.ex:321: Code.load_file/2
    saddle_points_test.exs:2: (file)
    (elixir) lib/code.ex:363: Code.require_file/2

[33mwarning: [0mvariable str is unused
  saddle_points.exs:39

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.02ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[31m  * test extract a column (3.1ms)[0m

  1) test extract a column (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:31[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mEnum.at(columns, 0) == [1, 4, 7, 8]
     [36mlhs:  [0m[[31m8[0m, [31m7[0m, [31m4[0m, [31m1[0m]
     [36mrhs:  [0m[[32m1[0m, [32m4[0m, [32m7[0m, [32m8[0m]
     [36mstacktrace:[0m
       saddle_points_test.exs:33: (test)

  * test extract another column  * test extract another column (skipped)
  * test no saddle point  * test no saddle point (skipped)
  * test a saddle point  * test a saddle point (skipped)
  * test another saddle point  * test another saddle point (skipped)
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.08 seconds (0.08s on load, 0.00s on tests)
[31m10 tests, 1 failure, 5 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable str is unused
  saddle_points.exs:39

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.00ms)[0m
  * test extract a column[32m  * test extract a column (0.02ms)[0m
  * test extract another column  * test extract another column (skipped)
  * test no saddle point  * test no saddle point (skipped)
  * test a saddle point  * test a saddle point (skipped)
  * test another saddle point  * test another saddle point (skipped)
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[32m10 tests, 0 failures, 5 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable str is unused
  saddle_points.exs:39

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
  * test extract a row[32m  * test extract a row (0.02ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[32m  * test extract a column (0.02ms)[0m
  * test extract another column[32m  * test extract another column (0.01ms)[0m
  * test no saddle point  * test no saddle point (skipped)
  * test a saddle point  * test a saddle point (skipped)
  * test another saddle point  * test another saddle point (skipped)
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[32m10 tests, 0 failures, 4 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable str is unused
  saddle_points.exs:39

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[32m  * test extract a column (0.02ms)[0m
  * test extract another column[32m  * test extract another column (0.02ms)[0m
  * test no saddle point[31m  * test no saddle point (2.5ms)[0m

  1) test no saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:41[0m
     [31mAssertion with == failed[0m
     [36mcode: [0msaddle_points == []
     [36mlhs:  [0mnil
     [36mrhs:  [0m[]
     [36mstacktrace:[0m
       saddle_points_test.exs:43: (test)

  * test a saddle point  * test a saddle point (skipped)
  * test another saddle point  * test another saddle point (skipped)
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[31m10 tests, 1 failure, 3 skipped[0m

Randomized with seed 0
** (CompileError) saddle_points.exs:41: invalid args for &, expected an expression in the format of &Mod.fun/arity, &local/arity or a capture containing at least one argument as &1, got: Enum.max()
    (elixir) expanding macro: Kernel.|>/2
    saddle_points.exs:42: Matrix.saddle_points/1
    (elixir) lib/code.ex:321: Code.load_file/2

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.02ms)[0m
  * test extract a row[32m  * test extract a row (0.02ms)[0m
  * test extract other row[32m  * test extract other row (0.03ms)[0m
  * test extract other row again[32m  * test extract other row again (0.04ms)[0m
  * test extract a column[32m  * test extract a column (0.03ms)[0m
  * test extract another column[32m  * test extract another column (0.03ms)[0m
  * test no saddle point[32m  * test no saddle point (0.04ms)[0m
  * test a saddle point  * test a saddle point (skipped)
  * test another saddle point  * test another saddle point (skipped)
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.06 seconds (0.06s on load, 0.00s on tests)
[32m10 tests, 0 failures, 3 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[32m  * test extract a column (0.02ms)[0m
  * test extract another column[32m  * test extract another column (0.01ms)[0m
  * test no saddle point[32m  * test no saddle point (0.02ms)[0m
  * test a saddle point[31m  * test a saddle point (2.5ms)[0m

  1) test a saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:46[0m
     [31mAssertion with == failed[0m
     [36mcode: [0msaddle_points == [{0, 1}]
     [36mlhs:  [0m[[31m2[0m]
     [36mrhs:  [0m[[32m{0, 1}[0m]
     [36mstacktrace:[0m
       saddle_points_test.exs:48: (test)

  * test another saddle point  * test another saddle point (skipped)
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.06 seconds (0.06s on load, 0.00s on tests)
[31m10 tests, 1 failure, 2 skipped[0m

Randomized with seed 0
** (CompileError) saddle_points.exs:58: undefined function row/0
    (stdlib) lists.erl:1337: :lists.foreach/2
    (stdlib) erl_eval.erl:670: :erl_eval.do_apply/6

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.03ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[32m  * test extract a column (0.03ms)[0m
  * test extract another column[32m  * test extract another column (0.03ms)[0m
  * test no saddle point[32m  * test no saddle point (0.04ms)[0m
  * test a saddle point[32m  * test a saddle point (0.03ms)[0m
  * test another saddle point  * test another saddle point (skipped)
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[32m10 tests, 0 failures, 2 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
  * test extract a row[32m  * test extract a row (0.02ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[32m  * test extract a column (0.02ms)[0m
  * test extract another column[32m  * test extract another column (0.01ms)[0m
  * test no saddle point[32m  * test no saddle point (0.02ms)[0m
  * test a saddle point[32m  * test a saddle point (0.02ms)[0m
  * test another saddle point[31m  * test another saddle point (2.3ms)[0m

  1) test another saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:51[0m
     [31mAssertion with == failed[0m
     [36mcode: [0msaddle_points == [{2, 2}]
     [36mlhs:  [0m[]
     [36mrhs:  [0m[[32m{2, 2}[0m]
     [36mstacktrace:[0m
       saddle_points_test.exs:53: (test)

  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[31m10 tests, 1 failure, 1 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
#MapSet<[{0, 0}, {1, 1}]>
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column#MapSet<[{0, 1}, {1, 0}]>
[32m  * test extract a column (0.03ms)[0m
  * test extract another column[32m  * test extract another column (0.02ms)[0m
#MapSet<[{0, 1}, {1, 1}]>
  * test no saddle point[32m  * test no saddle point (4.6ms)[0m
  * test a saddle point#MapSet<[{0, 0}, {0, 1}]>
[32m  * test a saddle point (0.2ms)[0m
  * test another saddle point#MapSet<[{0, 4}, {1, 4}, {2, 2}]>
#MapSet<[{0, 1}, {1, 2}, {2, 0}]>
[31m  * test another saddle point (2.4ms)[0m

  1) test another saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:51[0m
     [31mAssertion with == failed[0m
     [36mcode: [0msaddle_points == [{2, 2}]
     [36mlhs:  [0m[]
     [36mrhs:  [0m[[32m{2, 2}[0m]
     [36mstacktrace:[0m
       saddle_points_test.exs:53: (test)

  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.06 seconds (0.06s on load, 0.00s on tests)
[31m10 tests, 1 failure, 1 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows2
[32m  * test extract rows (0.05ms)[0m
2
  * test extract a row[32m  * test extract a row (0.03ms)[0m
  * test extract other row#MapSet<[{0, 0}, {1, 1}]>
1
1
[32m  * test extract other row (0.02ms)[0m
  * test extract other row again[32m  * test extract other row again (0.02ms)[0m
#MapSet<[{0, 1}, {1, 0}]>
  * test extract a column2
[32m  * test extract a column (0.04ms)[0m
4
  * test extract another column[32m  * test extract another column (0.03ms)[0m
  * test no saddle point#MapSet<[{0, 1}, {1, 1}]>
1
2
[32m  * test no saddle point (8.6ms)[0m
  * test a saddle point#MapSet<[{0, 0}, {0, 1}]>
91
320
[32m  * test a saddle point (0.3ms)[0m
8
  * test another saddle point#MapSet<[{0, 4}, {1, 4}, {2, 2}]>
3
3
8
#MapSet<[{0, 1}, {1, 2}, {2, 0}]>
[31m  * test another saddle point (7.6ms)[0m

  1) test another saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:51[0m
     [31mAssertion with == failed[0m
     [36mcode: [0msaddle_points == [{2, 2}]
     [36mlhs:  [0m[]
     [36mrhs:  [0m[[32m{2, 2}[0m]
     [36mstacktrace:[0m
       saddle_points_test.exs:53: (test)

  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.1 seconds (0.1s on load, 0.01s on tests)
[31m10 tests, 1 failure, 1 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
2
  * test extract a row2
[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
#MapSet<[{0, 0}, {1, 1}]>
  * test extract other row again1
[32m  * test extract other row again (0.01ms)[0m
1
  * test extract a column#MapSet<[{0, 1}, {1, 0}]>
[32m  * test extract a column (0.03ms)[0m
  * test extract another column[32m  * test extract another column (0.02ms)[0m
  * test no saddle point2
4
[32m  * test no saddle point (3.5ms)[0m
  * test a saddle point#MapSet<[{0, 1}, {1, 1}]>
1
2
#MapSet<[{0, 0}, {0, 1}]>
91
[32m  * test a saddle point (0.4ms)[0m
320
  * test another saddle point8
#MapSet<[{0, 4}, {1, 4}, {2, 2}]>
3
3
8
#MapSet<[{0, 1}, {1, 2}, {2, 0}]>
[31m  * test another saddle point (3.8ms)[0m

  1) test another saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:51[0m
     [31mAssertion with == failed[0m
     [36mcode: [0msaddle_points == [{2, 2}]
     [36mlhs:  [0m[]
     [36mrhs:  [0m[[32m{2, 2}[0m]
     [36mstacktrace:[0m
       saddle_points_test.exs:53: (test)

  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.06 seconds (0.06s on load, 0.00s on tests)
[31m10 tests, 1 failure, 1 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.02ms)[0m
[2, 1]
2
[1, 2]
2
  * test extract a row[32m  * test extract a row (0.01ms)[0m
#MapSet<[{0, 0}, {1, 1}]>
  * test extract other row[2, 1]
[32m  * test extract other row (0.02ms)[0m
1
  * test extract other row again[1, 2]
1
[32m  * test extract other row again (0.07ms)[0m
  * test extract a column[32m  * test extract a column (0.04ms)[0m
#MapSet<[{0, 1}, {1, 0}]>
  * test extract another column[32m  * test extract another column (0.02ms)[0m
[1, 2]
  * test no saddle point2
[32m  * test no saddle point (7.1ms)[0m
[3, 4]
  * test a saddle point4
#MapSet<[{0, 1}, {1, 1}]>
[1, 3]
1
[2, 4]
2
#MapSet<[{0, 0}, {0, 1}]>
[32m  * test a saddle point (0.5ms)[0m
  * test another saddle point[18, 3, 39, 19, 91]
91
[38, 10, 8, 77, 320]
320
[3, 4, 8, 6, 7]
8
#MapSet<[{0, 4}, {1, 4}, {2, 2}]>
[18, 38, 3]
3
[3, 10, 4]
3
'\'\b\b'
8
#MapSet<[{0, 1}, {1, 2}, {2, 0}]>
[31m  * test another saddle point (4.8ms)[0m

  1) test another saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:51[0m
     [31mAssertion with == failed[0m
     [36mcode: [0msaddle_points == [{2, 2}]
     [36mlhs:  [0m[]
     [36mrhs:  [0m[[32m{2, 2}[0m]
     [36mstacktrace:[0m
       saddle_points_test.exs:53: (test)

  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.07 seconds (0.06s on load, 0.01s on tests)
[31m10 tests, 1 failure, 1 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.02ms)[0m
[2, 1]
  * test extract a row2
[32m  * test extract a row (0.01ms)[0m
[1, 2]
  * test extract other row2
[32m  * test extract other row (0.02ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
#MapSet<[{0, 0}, {1, 1}]>
  * test extract a column[2, 1]
1
[32m  * test extract a column (0.03ms)[0m
  * test extract another column[1, 2]
1
[32m  * test extract another column (0.03ms)[0m
  * test no saddle point#MapSet<[{0, 1}, {1, 0}]>
[32m  * test no saddle point (5.7ms)[0m
[1, 2]
2
  * test a saddle point[3, 4]
4
#MapSet<[{0, 1}, {1, 1}]>
[1, 3]
1
[2, 4]
2
#MapSet<[{0, 0}, {0, 1}]>
[32m  * test a saddle point (0.5ms)[0m
  * test another saddle point[18, 3, 39, 19, 91]
91
[38, 10, 8, 77, 320]
320
[3, 4, 8, 6, 7]
8
#MapSet<[{0, 4}, {1, 4}, {2, 2}]>
[18, 38, 3]
3
[3, 10, 4]
3
'\'\b\b'
8
#MapSet<[{0, 1}, {1, 2}, {2, 0}]>
[31m  * test another saddle point (3.9ms)[0m

  1) test another saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:51[0m
     [31mAssertion with == failed[0m
     [36mcode: [0msaddle_points == [{2, 2}]
     [36mlhs:  [0m[]
     [36mrhs:  [0m[[32m{2, 2}[0m]
     [36mstacktrace:[0m
       saddle_points_test.exs:53: (test)

  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.07 seconds (0.06s on load, 0.01s on tests)
[31m10 tests, 1 failure, 1 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
[2, 1]
  * test extract a row2
[1, 2]
[32m  * test extract a row (0.00ms)[0m
2
  * test extract other row[32m  * test extract other row (0.02ms)[0m
  * test extract other row again#MapSet<[{0, 0}, {1, 1}]>
[2, 1]
[32m  * test extract other row again (0.01ms)[0m
1
  * test extract a column[1, 2]
[32m  * test extract a column (0.02ms)[0m
1
  * test extract another column[32m  * test extract another column (0.03ms)[0m
#MapSet<[{0, 1}, {1, 0}]>
  * test no saddle point[1, 2]
[32m  * test no saddle point (3.3ms)[0m
2
  * test a saddle point[3, 4]
4
#MapSet<[{0, 1}, {1, 1}]>
[1, 3]
1
[2, 4]
2
#MapSet<[{0, 0}, {0, 1}]>
[32m  * test a saddle point (0.4ms)[0m
  * test another saddle point[18, 3, 39, 19, 91]
91
[38, 10, 8, 77, 320]
320
[3, 4, 8, 6, 7]
8
#MapSet<[{0, 4}, {1, 4}, {2, 2}]>
[18, 38, 3]
3
[3, 10, 4]
3
'\'\b\b'
8
#MapSet<[{0, 1}, {1, 2}, {2, 0}]>
[31m  * test another saddle point (4.1ms)[0m

  1) test another saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:51[0m
     [31mAssertion with == failed[0m
     [36mcode: [0msaddle_points == [{2, 2}]
     [36mlhs:  [0m[]
     [36mrhs:  [0m[[32m{2, 2}[0m]
     [36mstacktrace:[0m
       saddle_points_test.exs:53: (test)

  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.06 seconds (0.06s on load, 0.00s on tests)
[31m10 tests, 1 failure, 1 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  saddle_points.exs:65

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.02ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[32m  * test extract a column (0.03ms)[0m
  * test extract another column[32m  * test extract another column (0.02ms)[0m
  * test no saddle point[31m  * test no saddle point (8.7ms)[0m

  1) test no saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:41[0m
     [31m** (UndefinedFunctionError) function Enum.map/1 is undefined or private. Did you mean one of:
     
           * map/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.map(#Function<4.109074020/1 in Matrix.saddle_point_coords/2>)
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:42: (test)

  * test a saddle point[31m  * test a saddle point (0.05ms)[0m

  2) test a saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:46[0m
     [31m** (UndefinedFunctionError) function Enum.map/1 is undefined or private. Did you mean one of:
     
           * map/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.map(#Function<4.109074020/1 in Matrix.saddle_point_coords/2>)
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:47: (test)

  * test another saddle point[31m  * test another saddle point (0.03ms)[0m

  3) test another saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:51[0m
     [31m** (UndefinedFunctionError) function Enum.map/1 is undefined or private. Did you mean one of:
     
           * map/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.map(#Function<4.109074020/1 in Matrix.saddle_point_coords/2>)
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:52: (test)

  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[31m10 tests, 3 failures, 1 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  saddle_points.exs:65

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.02ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[32m  * test extract a column (0.03ms)[0m
  * test extract another column[32m  * test extract another column (0.02ms)[0m
  * test no saddle point[31m  * test no saddle point (3.0ms)[0m

  1) test no saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:41[0m
     [31m** (UndefinedFunctionError) function Enum.map/1 is undefined or private. Did you mean one of:
     
           * map/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.map(#Function<4.109074020/1 in Matrix.saddle_point_coords/2>)
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:42: (test)

  * test a saddle point[31m  * test a saddle point (0.05ms)[0m

  2) test a saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:46[0m
     [31m** (UndefinedFunctionError) function Enum.map/1 is undefined or private. Did you mean one of:
     
           * map/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.map(#Function<4.109074020/1 in Matrix.saddle_point_coords/2>)
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:47: (test)

  * test another saddle point[31m  * test another saddle point (0.05ms)[0m

  3) test another saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:51[0m
     [31m** (UndefinedFunctionError) function Enum.map/1 is undefined or private. Did you mean one of:
     
           * map/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.map(#Function<4.109074020/1 in Matrix.saddle_point_coords/2>)
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:52: (test)

  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.08 seconds (0.08s on load, 0.00s on tests)
[31m10 tests, 3 failures, 1 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  saddle_points.exs:65

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[32m  * test extract a column (0.02ms)[0m
  * test extract another column[32m  * test extract another column (0.02ms)[0m
  * test no saddle point[31m  * test no saddle point (2.6ms)[0m

  1) test no saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:41[0m
     [31m** (UndefinedFunctionError) function Enum.map/1 is undefined or private. Did you mean one of:
     
           * map/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.map(#Function<4.109074020/1 in Matrix.saddle_point_coords/2>)
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:42: (test)

  * test a saddle point[31m  * test a saddle point (0.03ms)[0m

  2) test a saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:46[0m
     [31m** (UndefinedFunctionError) function Enum.map/1 is undefined or private. Did you mean one of:
     
           * map/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.map(#Function<4.109074020/1 in Matrix.saddle_point_coords/2>)
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:47: (test)

  * test another saddle point[31m  * test another saddle point (0.08ms)[0m

  3) test another saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:51[0m
     [31m** (UndefinedFunctionError) function Enum.map/1 is undefined or private. Did you mean one of:
     
           * map/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.map(#Function<4.109074020/1 in Matrix.saddle_point_coords/2>)
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:52: (test)

  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[31m10 tests, 3 failures, 1 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  saddle_points.exs:65

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.02ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[32m  * test extract a column (0.03ms)[0m
  * test extract another column[32m  * test extract another column (0.02ms)[0m
  * test no saddle point[31m  * test no saddle point (3.3ms)[0m

  1) test no saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:41[0m
     [31m** (UndefinedFunctionError) function Enum.map/1 is undefined or private. Did you mean one of:
     
           * map/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.map(#Function<4.109074020/1 in Matrix.saddle_point_coords/2>)
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:42: (test)

  * test a saddle point[31m  * test a saddle point (0.04ms)[0m

  2) test a saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:46[0m
     [31m** (UndefinedFunctionError) function Enum.map/1 is undefined or private. Did you mean one of:
     
           * map/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.map(#Function<4.109074020/1 in Matrix.saddle_point_coords/2>)
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:47: (test)

  * test another saddle point[31m  * test another saddle point (0.09ms)[0m

  3) test another saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:51[0m
     [31m** (UndefinedFunctionError) function Enum.map/1 is undefined or private. Did you mean one of:
     
           * map/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.map(#Function<4.109074020/1 in Matrix.saddle_point_coords/2>)
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:52: (test)

  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.08 seconds (0.08s on load, 0.00s on tests)
[31m10 tests, 3 failures, 1 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  saddle_points.exs:64

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.02ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.02ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[32m  * test extract a column (0.02ms)[0m
  * test extract another column[32m  * test extract another column (0.02ms)[0m
  * test no saddle point[31m  * test no saddle point (2.8ms)[0m

  1) test no saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:41[0m
     [31m** (UndefinedFunctionError) function Enum.map/1 is undefined or private. Did you mean one of:
     
           * map/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.map(#Function<4.130431999/1 in Matrix.saddle_point_coords/2>)
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:42: (test)

  * test a saddle point[31m  * test a saddle point (0.04ms)[0m

  2) test a saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:46[0m
     [31m** (UndefinedFunctionError) function Enum.map/1 is undefined or private. Did you mean one of:
     
           * map/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.map(#Function<4.130431999/1 in Matrix.saddle_point_coords/2>)
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:47: (test)

  * test another saddle point[31m  * test another saddle point (0.06ms)[0m

  3) test another saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:51[0m
     [31m** (UndefinedFunctionError) function Enum.map/1 is undefined or private. Did you mean one of:
     
           * map/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.map(#Function<4.130431999/1 in Matrix.saddle_point_coords/2>)
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:52: (test)

  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[31m10 tests, 3 failures, 1 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  saddle_points.exs:65

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.02ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[32m  * test extract a column (0.02ms)[0m
  * test extract another column[32m  * test extract another column (0.01ms)[0m
  * test no saddle point[31m  * test no saddle point (2.8ms)[0m

  1) test no saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:41[0m
     [31m** (UndefinedFunctionError) function Enum.filter/3 is undefined or private. Did you mean one of:
     
           * filter/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.filter([{2, 0}, {1, 1}], [2, 1], #Function<0.3967818/1 in Matrix.index_of/2>)
       saddle_points.exs:65: Matrix.index_of/2
       saddle_points.exs:57: anonymous fn/2 in Matrix.saddle_point_coords/2
       (elixir) lib/enum.ex:1183: Enum."-map/2-lists^map/1-0-"/2
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:42: (test)

  * test a saddle point[31m  * test a saddle point (0.03ms)[0m

  2) test a saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:46[0m
     [31m** (UndefinedFunctionError) function Enum.filter/3 is undefined or private. Did you mean one of:
     
           * filter/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.filter([{1, 0}, {2, 1}], [1, 2], #Function<0.3967818/1 in Matrix.index_of/2>)
       saddle_points.exs:65: Matrix.index_of/2
       saddle_points.exs:57: anonymous fn/2 in Matrix.saddle_point_coords/2
       (elixir) lib/enum.ex:1183: Enum."-map/2-lists^map/1-0-"/2
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:47: (test)

  * test another saddle point[31m  * test another saddle point (0.06ms)[0m

  3) test another saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:51[0m
     [31m** (UndefinedFunctionError) function Enum.filter/3 is undefined or private. Did you mean one of:
     
           * filter/2
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.filter([{18, 0}, {3, 1}, {39, 2}, {19, 3}, {91, 4}], [18, 3, 39, 19, 91], #Function<0.3967818/1 in Matrix.index_of/2>)
       saddle_points.exs:65: Matrix.index_of/2
       saddle_points.exs:57: anonymous fn/2 in Matrix.saddle_point_coords/2
       (elixir) lib/enum.ex:1183: Enum."-map/2-lists^map/1-0-"/2
       saddle_points.exs:56: Matrix.saddle_point_coords/2
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:52: (test)

  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[31m10 tests, 3 failures, 1 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  saddle_points.exs:65

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.02ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[32m  * test extract a column (0.03ms)[0m
  * test extract another column[32m  * test extract another column (0.03ms)[0m
  * test no saddle point[31m  * test no saddle point (4.8ms)[0m

  1) test no saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:41[0m
     [31m** (UndefinedFunctionError) function Enum.flatten/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Enum.flatten([[{0, 0}], [{1, 1}]])
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:42: (test)

  * test a saddle point[31m  * test a saddle point (0.05ms)[0m

  2) test a saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:46[0m
     [31m** (UndefinedFunctionError) function Enum.flatten/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Enum.flatten([[{0, 1}], [{1, 1}]])
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:47: (test)

  * test another saddle point[31m  * test another saddle point (0.07ms)[0m

  3) test another saddle point (SaddlePointsTest)
     [1m[30msaddle_points_test.exs:51[0m
     [31m** (UndefinedFunctionError) function Enum.flatten/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Enum.flatten([[{0, 4}], [{1, 4}], [{2, 2}]])
       saddle_points.exs:40: Matrix.saddle_points/1
       saddle_points_test.exs:52: (test)

  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[31m10 tests, 3 failures, 1 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  saddle_points.exs:65

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
  * test extract a row#MapSet<[{0, 0}, {1, 1}]>
[32m  * test extract a row (0.01ms)[0m
  * test extract other row#MapSet<[{0, 1}, {1, 0}]>
[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column#MapSet<[{0, 1}, {1, 1}]>
[32m  * test extract a column (0.02ms)[0m
  * test extract another column#MapSet<[{0, 0}, {0, 1}]>
[32m  * test extract another column (0.01ms)[0m
  * test no saddle point[32m  * test no saddle point (4.2ms)[0m
  * test a saddle point[32m  * test a saddle point (0.4ms)[0m
  * test another saddle point#MapSet<[{0, 4}, {1, 4}, {2, 2}]>
#MapSet<[{0, 1}, {1, 2}, {2, 0}, {2, 2}]>
[32m  * test another saddle point (0.5ms)[0m
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[32m10 tests, 0 failures, 1 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  saddle_points.exs:63

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[32m  * test extract a column (0.02ms)[0m
  * test extract another column[32m  * test extract another column (0.01ms)[0m
  * test no saddle point[32m  * test no saddle point (0.03ms)[0m
  * test a saddle point[32m  * test a saddle point (0.03ms)[0m
  * test another saddle point[32m  * test another saddle point (0.04ms)[0m
  * test multiple saddle points  * test multiple saddle points (skipped)


Finished in 0.09 seconds (0.09s on load, 0.00s on tests)
[32m10 tests, 0 failures, 1 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  saddle_points.exs:63

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[32m  * test extract a column (0.02ms)[0m
  * test extract another column[32m  * test extract another column (0.01ms)[0m
  * test no saddle point[32m  * test no saddle point (0.03ms)[0m
  * test a saddle point[32m  * test a saddle point (0.02ms)[0m
  * test another saddle point[32m  * test another saddle point (0.05ms)[0m
  * test multiple saddle points[32m  * test multiple saddle points (0.04ms)[0m


Finished in 0.08 seconds (0.08s on load, 0.00s on tests)
[32m10 tests, 0 failures[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  saddle_points.exs:63

Excluding tags: [:pending]


SaddlePointsTest
  * test extract rows[32m  * test extract rows (0.01ms)[0m
  * test extract a row[32m  * test extract a row (0.01ms)[0m
  * test extract other row[32m  * test extract other row (0.01ms)[0m
  * test extract other row again[32m  * test extract other row again (0.01ms)[0m
  * test extract a column[32m  * test extract a column (0.02ms)[0m
  * test extract another column[32m  * test extract another column (0.01ms)[0m
  * test no saddle point[32m  * test no saddle point (0.03ms)[0m
  * test a saddle point[32m  * test a saddle point (0.02ms)[0m
  * test another saddle point[32m  * test another saddle point (0.05ms)[0m
  * test multiple saddle points[32m  * test multiple saddle points (0.04ms)[0m


Finished in 0.06 seconds (0.06s on load, 0.00s on tests)
[32m10 tests, 0 failures[0m

Randomized with seed 0
