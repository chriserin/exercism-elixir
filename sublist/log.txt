** (TokenMissingError) sublist.exs:10: missing terminator: ' (for string starting at line 7)
    (elixir) lib/code.ex:321: Code.load_file/2
    sublist_test.exs:2: (file)
    (elixir) lib/code.ex:363: Code.require_file/2

** (TokenMissingError) sublist.exs:10: missing terminator: ' (for string starting at line 7)
    (elixir) lib/code.ex:321: Code.load_file/2
    sublist_test.exs:2: (file)
    (elixir) lib/code.ex:363: Code.require_file/2

warning: variable a is unused
  sublist.exs:6

warning: variable b is unused
  sublist.exs:6

Excluding tags: [:pending]


SublistTest
  * test empty equals empty  * test empty equals empty (0.00ms)
  * test empty is a sublist of anything  * test empty is a sublist of anything (skipped)
  * test anything is a superlist of empty  * test anything is a superlist of empty (skipped)
  * test 1 is not 2  * test 1 is not 2 (skipped)
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
20 tests, 0 failures, 19 skipped

Randomized with seed 0
warning: variable a is unused
  sublist.exs:6

warning: variable b is unused
  sublist.exs:6

Excluding tags: [:pending]


SublistTest
  * test empty equals empty  * test empty equals empty (0.00ms)
  * test empty is a sublist of anything  * test empty is a sublist of anything (skipped)
  * test anything is a superlist of empty  * test anything is a superlist of empty (skipped)
  * test 1 is not 2  * test 1 is not 2 (skipped)
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
20 tests, 0 failures, 19 skipped

Randomized with seed 0
warning: variable a is unused
  sublist.exs:6

warning: variable b is unused
  sublist.exs:6

Excluding tags: [:pending]


SublistTest
  * test empty equals empty  * test empty equals empty (0.00ms)
  * test empty is a sublist of anything  * test empty is a sublist of anything (skipped)
  * test anything is a superlist of empty  * test anything is a superlist of empty (skipped)
  * test 1 is not 2  * test 1 is not 2 (skipped)
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
20 tests, 0 failures, 19 skipped

Randomized with seed 0
[33mwarning: [0mvariable a is unused
  sublist.exs:6

[33mwarning: [0mvariable b is unused
  sublist.exs:6

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything  * test empty is a sublist of anything (skipped)
  * test anything is a superlist of empty  * test anything is a superlist of empty (skipped)
  * test 1 is not 2  * test 1 is not 2 (skipped)
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[32m20 tests, 0 failures, 19 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable a is unused
  sublist.exs:6

[33mwarning: [0mvariable b is unused
  sublist.exs:6

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything  * test empty is a sublist of anything (skipped)
  * test anything is a superlist of empty  * test anything is a superlist of empty (skipped)
  * test 1 is not 2  * test 1 is not 2 (skipped)
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[32m20 tests, 0 failures, 19 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable a is unused
  sublist.exs:6

[33mwarning: [0mvariable b is unused
  sublist.exs:6

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (6.2ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([], [nil]) == :sublist
     [36mlhs:  [0m:equal
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty  * test anything is a superlist of empty (skipped)
  * test 1 is not 2  * test 1 is not 2 (skipped)
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[31m20 tests, 1 failure, 18 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (5.2ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (ArgumentError) cannot convert the given list to a string.
     
     To be converted to a string, a list must contain only:
     
       * strings
       * integers representing Unicode codepoints
       * or a list containing one of these three elements
     
     Please check the given list or call inspect/1 to get the list representation, got:
     
     [nil]
     [0m
     [36mstacktrace:[0m
       (elixir) lib/list.ex:624: List.to_string/1
       sublist.exs:8: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty  * test anything is a superlist of empty (skipped)
  * test 1 is not 2  * test 1 is not 2 (skipped)
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[31m20 tests, 1 failure, 18 skipped[0m

Randomized with seed 0
** (SyntaxError) sublist.exs:10: unexpected token: ")". "do" starting at line 7 is missing terminator "end"
    (elixir) lib/code.ex:321: Code.load_file/2
    sublist_test.exs:2: (file)
    (elixir) lib/code.ex:363: Code.require_file/2

** (SyntaxError) sublist.exs:14: unexpected token: end
    (elixir) lib/code.ex:321: Code.load_file/2
    sublist_test.exs:2: (file)
    (elixir) lib/code.ex:363: Code.require_file/2

[33mwarning: [0mvariable a is unused
  sublist.exs:6

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[31m  * test empty equals empty (3.3ms)[0m

  1) test empty equals empty (SublistTest)
     [1m[30msublist_test.exs:11[0m
     [31m** (UndefinedFunctionError) function String.contains/2 is undefined or private. Did you mean one of:
     
           * contains?/2
     [0m
     [36mstacktrace:[0m
       (elixir) String.contains("", "")
       sublist.exs:8: Sublist.compare/2
       sublist_test.exs:12: (test)

  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (1.8ms)[0m

  2) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (ArgumentError) cannot convert the given list to a string.
     
     To be converted to a string, a list must contain only:
     
       * strings
       * integers representing Unicode codepoints
       * or a list containing one of these three elements
     
     Please check the given list or call inspect/1 to get the list representation, got:
     
     [nil]
     [0m
     [36mstacktrace:[0m
       (elixir) lib/list.ex:624: List.to_string/1
       sublist.exs:8: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty  * test anything is a superlist of empty (skipped)
  * test 1 is not 2  * test 1 is not 2 (skipped)
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[31m20 tests, 2 failures, 18 skipped[0m

Randomized with seed 0
** (SyntaxError) sublist.exs:24: syntax error before: '...'
    (elixir) lib/code.ex:321: Code.load_file/2
    sublist_test.exs:2: (file)
    (elixir) lib/code.ex:363: Code.require_file/2

** (SyntaxError) sublist.exs:24: syntax error before: '...'
    (elixir) lib/code.ex:321: Code.load_file/2
    sublist_test.exs:2: (file)
    (elixir) lib/code.ex:363: Code.require_file/2

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (5.7ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (UndefinedFunctionError) function Enam.map/2 is undefined (module Enam is not available)[0m
     [36mstacktrace:[0m
       Enam.map(0..-1, #Function<0.3141577/1 in Sublist.is_superset/2>)
       sublist.exs:24: Sublist.is_superset/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty  * test anything is a superlist of empty (skipped)
  * test 1 is not 2  * test 1 is not 2 (skipped)
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[31m20 tests, 1 failure, 18 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (5.8ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (UndefinedFunctionError) function Enam.map/2 is undefined (module Enam is not available)[0m
     [36mstacktrace:[0m
       Enam.map(0..0, #Function<0.94258547/1 in Sublist.is_superset/2>)
       sublist.exs:24: Sublist.is_superset/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty  * test anything is a superlist of empty (skipped)
  * test 1 is not 2  * test 1 is not 2 (skipped)
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.09 seconds (0.09s on load, 0.00s on tests)
[31m20 tests, 1 failure, 18 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (5.8ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (UndefinedFunctionError) function Enam.map/2 is undefined (module Enam is not available)[0m
     [36mstacktrace:[0m
       Enam.map(0..0, #Function<0.94258547/1 in Sublist.is_superset/2>)
       sublist.exs:24: Sublist.is_superset/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty  * test anything is a superlist of empty (skipped)
  * test 1 is not 2  * test 1 is not 2 (skipped)
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[31m20 tests, 1 failure, 18 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (6.6ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (UndefinedFunctionError) function List.slice/2 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) List.slice([], 0..1)
       sublist.exs:24: anonymous fn/3 in Sublist.is_superset/2
       (elixir) lib/enum.ex:1187: anonymous fn/3 in Enum.map/2
       (elixir) lib/enum.ex:1627: anonymous fn/3 in Enum.reduce/3
       (elixir) lib/range.ex:92: Enumerable.Range.reduce/5
       (elixir) lib/enum.ex:1626: Enum.reduce/3
       (elixir) lib/enum.ex:1187: Enum.map/2
       sublist.exs:24: Sublist.is_superset/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty  * test anything is a superlist of empty (skipped)
  * test 1 is not 2  * test 1 is not 2 (skipped)
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[31m20 tests, 1 failure, 18 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (8.3ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([], [nil]) == :sublist
     [36mlhs:  [0m:subset
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty  * test anything is a superlist of empty (skipped)
  * test 1 is not 2  * test 1 is not 2 (skipped)
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[31m20 tests, 1 failure, 18 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (2.8ms)[0m
  * test anything is a superlist of empty  * test anything is a superlist of empty (skipped)
  * test 1 is not 2  * test 1 is not 2 (skipped)
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[32m20 tests, 0 failures, 18 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (2.8ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.02ms)[0m
  * test 1 is not 2  * test 1 is not 2 (skipped)
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.09 seconds (0.09s on load, 0.00s on tests)
[32m20 tests, 0 failures, 17 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (2.7ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.01ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.04ms)[0m
  * test comparing massive equal lists  * test comparing massive equal lists (skipped)
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[32m20 tests, 0 failures, 16 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (2.4ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.01ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.03ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (157.0ms)[0m
  * test sublist at start  * test sublist at start (skipped)
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.2 seconds (0.1s on load, 0.1s on tests)
[32m20 tests, 0 failures, 15 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (2.6ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.01ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.07ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (167.6ms)[0m
  * test sublist at start[31m  * test sublist at start (2.3ms)[0m

  1) test sublist at start (SublistTest)
     [1m[30msublist_test.exs:32[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 3], [1, 2, 3, 4, 5]) == :sublist
     [36mlhs:  [0m:unequal
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:33: (test)

  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.2 seconds (0.1s on load, 0.1s on tests)
[31m20 tests, 1 failure, 14 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (2.5ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.03ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.07ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (161.1ms)[0m
  * test sublist at start[31m  * test sublist at start (2.3ms)[0m

  1) test sublist at start (SublistTest)
     [1m[30msublist_test.exs:32[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 3], [1, 2, 3, 4, 5]) == :sublist
     [36mlhs:  [0m:unequal
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:33: (test)

  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.2 seconds (0.1s on load, 0.1s on tests)
[31m20 tests, 1 failure, 14 skipped[0m

Randomized with seed 0
** (SyntaxError) sublist.exs:25: syntax error before: '('
    (elixir) lib/code.ex:321: Code.load_file/2
    sublist_test.exs:2: (file)
    (elixir) lib/code.ex:363: Code.require_file/2

** (SyntaxError) sublist.exs:25: syntax error before: '('
    (elixir) lib/code.ex:321: Code.load_file/2
    sublist_test.exs:2: (file)
    (elixir) lib/code.ex:363: Code.require_file/2

Excluding tags: [:pending]


SublistTest
  * test empty equals emptyinspecting superlist
[32m  * test empty equals empty (0.00ms)[0m
[]
inspecting superlist
  * test empty is a sublist of anything[nil]
[]
inspecting superlist
[32m  * test empty is a sublist of anything (2.6ms)[0m
[nil]
  * test anything is a superlist of empty[]
inspecting superlist
[32m  * test anything is a superlist of empty (0.1ms)[0m
[1]
  * test 1 is not 2[]
inspecting superlist
[2]
[]
[32m  * test 1 is not 2 (0.9ms)[0m
  * test comparing massive equal listsinspecting superlist
[32m  * test comparing massive equal lists (160.1ms)[0m
  * test sublist at start[1, 2, 3]
[2, 3]
[3]
[]
inspecting superlist
[1, 2, 3, 4]
[2, 3, 4, 5]
[3, 4, 5]
[4, 5]
[5]
[]
[31m  * test sublist at start (2.6ms)[0m

  1) test sublist at start (SublistTest)
     [1m[30msublist_test.exs:32[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 3], [1, 2, 3, 4, 5]) == :sublist
     [36mlhs:  [0m:unequal
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:33: (test)

  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.2 seconds (0.1s on load, 0.1s on tests)
[31m20 tests, 1 failure, 14 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals emptyinspecting superlist
[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[]
inspecting superlist
[nil]
[]
inspecting superlist
[32m  * test empty is a sublist of anything (2.5ms)[0m
[nil]
  * test anything is a superlist of empty[]
inspecting superlist
[32m  * test anything is a superlist of empty (0.09ms)[0m
[1]
  * test 1 is not 2[]
inspecting superlist
[2]
[]
[32m  * test 1 is not 2 (1.0ms)[0m
  * test comparing massive equal listsinspecting superlist
[32m  * test comparing massive equal lists (156.2ms)[0m
  * test sublist at start[1, 2, 3]
[2, 3]
[3]
[]
inspecting superlist
[1, 2, 3]
[2, 3, 4]
[3, 4, 5]
[4, 5]
[5]
[]
[32m  * test sublist at start (0.5ms)[0m
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.2 seconds (0.1s on load, 0.1s on tests)
[32m20 tests, 0 failures, 14 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals emptyinspecting superlist
[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anythinginspecting superlist
inspecting superlist
[32m  * test empty is a sublist of anything (2.8ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.07ms)[0m
inspecting superlist
  * test 1 is not 2inspecting superlist
[32m  * test 1 is not 2 (0.09ms)[0m
  * test comparing massive equal listsinspecting superlist
inspecting superlist
[32m  * test comparing massive equal lists (155.1ms)[0m
  * test sublist at start[32m  * test sublist at start (0.1ms)[0m
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.2 seconds (0.09s on load, 0.1s on tests)
[32m20 tests, 0 failures, 14 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (2.6ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.01ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.04ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (159.3ms)[0m
  * test sublist at start[32m  * test sublist at start (0.05ms)[0m
  * test sublist in middle  * test sublist in middle (skipped)
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.2 seconds (0.1s on load, 0.1s on tests)
[32m20 tests, 0 failures, 14 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (3.2ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.01ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.04ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (160.5ms)[0m
  * test sublist at start[32m  * test sublist at start (0.04ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.07ms)[0m
  * test sublist at end  * test sublist at end (skipped)
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.2 seconds (0.1s on load, 0.1s on tests)
[32m20 tests, 0 failures, 13 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (2.5ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.01ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.07ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (154.3ms)[0m
  * test sublist at start[32m  * test sublist at start (0.06ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.03ms)[0m
  * test sublist at end[32m  * test sublist at end (0.06ms)[0m
  * test partially matching sublist at start  * test partially matching sublist at start (skipped)
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.2 seconds (0.1s on load, 0.1s on tests)
[32m20 tests, 0 failures, 12 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (2.4ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.02ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.03ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (158.6ms)[0m
  * test sublist at start[32m  * test sublist at start (0.08ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.07ms)[0m
  * test sublist at end[32m  * test sublist at end (0.05ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.04ms)[0m
  * test sublist early in huge list  * test sublist early in huge list (skipped)
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.2 seconds (0.09s on load, 0.1s on tests)
[32m20 tests, 0 failures, 11 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (2.3ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.01ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.04ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (155.8ms)[0m
  * test sublist at start[32m  * test sublist at start (0.05ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.04ms)[0m
  * test sublist at end[32m  * test sublist at end (0.09ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.04ms)[0m
  * test sublist early in huge listExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (3.0ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (UndefinedFunctionError) function Task.new/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Task.new(#Function<0.3635568/1 in Sublist.is_superlist/2>)
       sublist.exs:24: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.04ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (UndefinedFunctionError) function Task.new/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Task.new(#Function<0.3635568/1 in Sublist.is_superlist/2>)
       sublist.exs:24: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[31m  * test 1 is not 2 (0.03ms)[0m

  3) test 1 is not 2 (SublistTest)
     [1m[30msublist_test.exs:23[0m
     [31m** (UndefinedFunctionError) function Task.new/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Task.new(#Function<0.3635568/1 in Sublist.is_superlist/2>)
       sublist.exs:24: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:24: (test)

  * test comparing massive equal lists[32m  * test comparing massive equal lists (158.6ms)[0m
  * test sublist at start[31m  * test sublist at start (0.03ms)[0m

  4) test sublist at start (SublistTest)
     [1m[30msublist_test.exs:32[0m
     [31m** (UndefinedFunctionError) function Task.new/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Task.new(#Function<0.3635568/1 in Sublist.is_superlist/2>)
       sublist.exs:24: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:33: (test)

  * test sublist in middle[31m  * test sublist in middle (0.04ms)[0m

  5) test sublist in middle (SublistTest)
     [1m[30msublist_test.exs:36[0m
     [31m** (UndefinedFunctionError) function Task.new/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Task.new(#Function<0.3635568/1 in Sublist.is_superlist/2>)
       sublist.exs:24: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:37: (test)

  * test sublist at end[31m  * test sublist at end (0.03ms)[0m

  6) test sublist at end (SublistTest)
     [1m[30msublist_test.exs:40[0m
     [31m** (UndefinedFunctionError) function Task.new/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Task.new(#Function<0.3635568/1 in Sublist.is_superlist/2>)
       sublist.exs:24: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:41: (test)

  * test partially matching sublist at start[31m  * test partially matching sublist at start (0.04ms)[0m

  7) test partially matching sublist at start (SublistTest)
     [1m[30msublist_test.exs:44[0m
     [31m** (UndefinedFunctionError) function Task.new/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Task.new(#Function<0.3635568/1 in Sublist.is_superlist/2>)
       sublist.exs:24: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:45: (test)

  * test sublist early in huge list[31m  * test sublist early in huge list (162.6ms)[0m

  8) test sublist early in huge list (SublistTest)
     [1m[30msublist_test.exs:48[0m
     [31m** (UndefinedFunctionError) function Task.new/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Task.new(#Function<0.3635568/1 in Sublist.is_superlist/2>)
       sublist.exs:24: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:49: (test)

  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.4 seconds (0.1s on load, 0.3s on tests)
[31m20 tests, 8 failures, 10 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (0.00ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (EXIT from #PID<0.68.0>) an exception was raised:
         ** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
             :erlang.apply/2
             (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
             (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
             (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3[0m

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.00ms)[0m
[31m
18:15:54.916 [error] Task #PID<0.69.0> started from #PID<0.68.0> terminating
** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
    :erlang.apply/2
    (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
    (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
    (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Function: &:erlang.apply/2
    Args: [#Function<0.100446085/1 in Sublist.is_superlist/2>, []]
[0m[31m
18:15:54.920 [error] Task #PID<0.71.0> started from #PID<0.70.0> terminating
** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
    :erlang.apply/2
    (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
    (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
    (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Function: &:erlang.apply/2
    Args: [#Function<0.100446085/1 in Sublist.is_superlist/2>, []]
[0m[31m
18:15:54.920 [error] Task #PID<0.73.0> started from #PID<0.72.0> terminating
** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
    :erlang.apply/2
    (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
    (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
    (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Function: &:erlang.apply/2
    Args: [#Function<0.100446085/1 in Sublist.is_superlist/2>, []]
[0m
  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (EXIT from #PID<0.70.0>) an exception was raised:
         ** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
             :erlang.apply/2
             (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
             (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
             (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3[0m

  * test 1 is not 2[31m  * test 1 is not 2 (0.00ms)[0m

  3) test 1 is not 2 (SublistTest)
     [1m[30msublist_test.exs:23[0m
     [31m** (EXIT from #PID<0.72.0>) an exception was raised:
         ** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
             :erlang.apply/2
             (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
             (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
             (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3[0m

  * test comparing massive equal lists[32m  * test comparing massive equal lists (166.4ms)[0m
  * test sublist at start[31m  * test sublist at start (0.00ms)[0m
[31m
18:15:55.070 [error] Task #PID<0.76.0> started from #PID<0.75.0> terminating
** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
    :erlang.apply/2
    (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
    (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
    (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Function: &:erlang.apply/2
    Args: [#Function<0.100446085/1 in Sublist.is_superlist/2>, []]
[0m[31m
18:15:55.070 [error] Task #PID<0.78.0> started from #PID<0.77.0> terminating
** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
    :erlang.apply/2
    (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
    (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
    (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Function: &:erlang.apply/2
    Args: [#Function<0.100446085/1 in Sublist.is_superlist/2>, []]
[0m[31m
18:15:55.071 [error] Task #PID<0.80.0> started from #PID<0.79.0> terminating
** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
    :erlang.apply/2
    (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
    (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
    (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Function: &:erlang.apply/2
    Args: [#Function<0.100446085/1 in Sublist.is_superlist/2>, []]
[0m[31m
18:15:55.071 [error] Task #PID<0.82.0> started from #PID<0.81.0> terminating
** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
    :erlang.apply/2
    (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
    (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
    (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Function: &:erlang.apply/2
    Args: [#Function<0.100446085/1 in Sublist.is_superlist/2>, []]
[0m
  4) test sublist at start (SublistTest)
     [1m[30msublist_test.exs:32[0m
     [31m** (EXIT from #PID<0.75.0>) an exception was raised:
         ** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
             :erlang.apply/2
             (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
             (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
             (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3[0m

  * test sublist in middle[31m  * test sublist in middle (0.00ms)[0m

  5) test sublist in middle (SublistTest)
     [1m[30msublist_test.exs:36[0m
     [31m** (EXIT from #PID<0.77.0>) an exception was raised:
         ** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
             :erlang.apply/2
             (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
             (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
             (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3[0m

  * test sublist at end[31m  * test sublist at end (0.00ms)[0m

  6) test sublist at end (SublistTest)
     [1m[30msublist_test.exs:40[0m
     [31m** (EXIT from #PID<0.79.0>) an exception was raised:
         ** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
             :erlang.apply/2
             (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
             (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
             (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3[0m

  * test partially matching sublist at start[31m  * test partially matching sublist at start (0.00ms)[0m

  7) test partially matching sublist at start (SublistTest)
     [1m[30msublist_test.exs:44[0m
     [31m** (EXIT from #PID<0.81.0>) an exception was raised:
         ** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
             :erlang.apply/2
             (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
             (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
             (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3[0m

  * test sublist early in huge list[31m  * test sublist early in huge list (0.00ms)[0m

  8) test sublist early in huge list (SublistTest)
     [1m[30msublist_test.exs:48[0m
     [31m** (EXIT from #PID<0.83.0>) an exception was raised:
         ** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
             :erlang.apply/2
             (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
             (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
             (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3[0m

  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.5 seconds (0.1s on load, 0.4s on tests)
[31m20 tests, 8 failures, 10 skipped[0m

Randomized with seed 0
[31m
18:15:55.371 [error] Task #PID<0.84.0> started from #PID<0.83.0> terminating
** (BadArityError) #Function<0.100446085/1 in Sublist.is_superlist/2> with arity 1 called with no arguments
    :erlang.apply/2
    (elixir) lib/task/supervised.ex:94: Task.Supervised.do_apply/2
    (elixir) lib/task/supervised.ex:45: Task.Supervised.reply/5
    (stdlib) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Function: &:erlang.apply/2
    Args: [#Function<0.100446085/1 in Sublist.is_superlist/2>, []]
[0mExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (3.5ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.04ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.1ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (152.7ms)[0m
  * test sublist at start[32m  * test sublist at start (0.1ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.2ms)[0m
  * test sublist at end[32m  * test sublist at end (0.1ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.2ms)[0m
  * test sublist early in huge listExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (3.5ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.02ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.02ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (156.2ms)[0m
  * test sublist at start[32m  * test sublist at start (0.05ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.08ms)[0m
  * test sublist at end[32m  * test sublist at end (0.1ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.07ms)[0m
  * test sublist early in huge list** (SyntaxError) sublist.exs:27: unexpected keyword "do:". In case you wanted to write a "do" expression, you must either separate the keyword argument with comma or use do-blocks. For example, the following construct:

    if some_condition? do
      :this
    else
      :that
    end

is syntax sugar for the Elixir construct:

    if(some_condition?, do: :this, else: :that)

where "some_condition?" is the first argument and the second argument is a keyword list.

Syntax error before: 'do:'
    (elixir) lib/code.ex:321: Code.load_file/2
    sublist_test.exs:2: (file)
    (elixir) lib/code.ex:363: Code.require_file/2

[33mwarning: [0mvariable a is unused
  sublist.exs:27

[33mwarning: [0mvariable b is unused
  sublist.exs:27

[33mwarning: [0mvariable index is unused
  sublist.exs:27

[33mwarning: [0mvariable a is unused
  sublist.exs:36

[33mwarning: [0mvariable b is unused
  sublist.exs:36

[33mwarning: [0mvariable index is unused
  sublist.exs:36

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[31m  * test 1 is not 2 (3.9ms)[0m

  1) test 1 is not 2 (SublistTest)
     [1m[30msublist_test.exs:23[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1], [2]) == :unequal
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:unequal
     [36mstacktrace:[0m
       sublist_test.exs:24: (test)

  * test comparing massive equal lists[32m  * test comparing massive equal lists (157.6ms)[0m
  * test sublist at start[31m  * test sublist at start (0.02ms)[0m

  2) test sublist at start (SublistTest)
     [1m[30msublist_test.exs:32[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 3], [1, 2, 3, 4, 5]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:33: (test)

  * test sublist in middle[31m  * test sublist in middle (0.01ms)[0m

  3) test sublist in middle (SublistTest)
     [1m[30msublist_test.exs:36[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([4, 3, 2], [5, 4, 3, 2, 1]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:37: (test)

  * test sublist at end[31m  * test sublist at end (0.01ms)[0m

  4) test sublist at end (SublistTest)
     [1m[30msublist_test.exs:40[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([3, 4, 5], [1, 2, 3, 4, 5]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:41: (test)

  * test partially matching sublist at start[31m  * test partially matching sublist at start (0.02ms)[0m

  5) test partially matching sublist at start (SublistTest)
     [1m[30msublist_test.exs:44[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 1, 2], [1, 1, 1, 2]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:45: (test)

  * test sublist early in huge list[31m  * test sublist early in huge list (162.1ms)[0m

  6) test sublist early in huge list (SublistTest)
     [1m[30msublist_test.exs:48[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([3, 4, 5], Enum.to_list(1..1000000)) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:49: (test)

  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.4 seconds (0.1s on load, 0.3s on tests)
[31m20 tests, 6 failures, 10 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable a is unused
  sublist.exs:27

[33mwarning: [0mvariable b is unused
  sublist.exs:27

[33mwarning: [0mvariable index is unused
  sublist.exs:27

[33mwarning: [0mvariable a is unused
  sublist.exs:36

[33mwarning: [0mvariable b is unused
  sublist.exs:36

[33mwarning: [0mvariable index is unused
  sublist.exs:36

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[31m  * test 1 is not 2 (2.7ms)[0m

  1) test 1 is not 2 (SublistTest)
     [1m[30msublist_test.exs:23[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1], [2]) == :unequal
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:unequal
     [36mstacktrace:[0m
       sublist_test.exs:24: (test)

  * test comparing massive equal lists[32m  * test comparing massive equal lists (169.7ms)[0m
  * test sublist at start[31m  * test sublist at start (0.03ms)[0m

  2) test sublist at start (SublistTest)
     [1m[30msublist_test.exs:32[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 3], [1, 2, 3, 4, 5]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:33: (test)

  * test sublist in middle[31m  * test sublist in middle (0.01ms)[0m

  3) test sublist in middle (SublistTest)
     [1m[30msublist_test.exs:36[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([4, 3, 2], [5, 4, 3, 2, 1]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:37: (test)

  * test sublist at end[31m  * test sublist at end (0.01ms)[0m

  4) test sublist at end (SublistTest)
     [1m[30msublist_test.exs:40[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([3, 4, 5], [1, 2, 3, 4, 5]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:41: (test)

  * test partially matching sublist at start[31m  * test partially matching sublist at start (0.01ms)[0m

  5) test partially matching sublist at start (SublistTest)
     [1m[30msublist_test.exs:44[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 1, 2], [1, 1, 1, 2]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:45: (test)

  * test sublist early in huge list[31m  * test sublist early in huge list (151.9ms)[0m

  6) test sublist early in huge list (SublistTest)
     [1m[30msublist_test.exs:48[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([3, 4, 5], Enum.to_list(1..1000000)) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:49: (test)

  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.4 seconds (0.1s on load, 0.3s on tests)
[31m20 tests, 6 failures, 10 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable a is unused
  sublist.exs:27

[33mwarning: [0mvariable b is unused
  sublist.exs:27

[33mwarning: [0mvariable index is unused
  sublist.exs:27

[33mwarning: [0mvariable a is unused
  sublist.exs:36

[33mwarning: [0mvariable b is unused
  sublist.exs:36

[33mwarning: [0mvariable index is unused
  sublist.exs:36

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[31m  * test 1 is not 2 (2.7ms)[0m

  1) test 1 is not 2 (SublistTest)
     [1m[30msublist_test.exs:23[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1], [2]) == :unequal
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:unequal
     [36mstacktrace:[0m
       sublist_test.exs:24: (test)

  * test comparing massive equal lists[32m  * test comparing massive equal lists (163.9ms)[0m
  * test sublist at start[31m  * test sublist at start (0.03ms)[0m

  2) test sublist at start (SublistTest)
     [1m[30msublist_test.exs:32[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 3], [1, 2, 3, 4, 5]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:33: (test)

  * test sublist in middle[31m  * test sublist in middle (0.01ms)[0m

  3) test sublist in middle (SublistTest)
     [1m[30msublist_test.exs:36[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([4, 3, 2], [5, 4, 3, 2, 1]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:37: (test)

  * test sublist at end[31m  * test sublist at end (0.01ms)[0m

  4) test sublist at end (SublistTest)
     [1m[30msublist_test.exs:40[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([3, 4, 5], [1, 2, 3, 4, 5]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:41: (test)

  * test partially matching sublist at start[31m  * test partially matching sublist at start (0.01ms)[0m

  5) test partially matching sublist at start (SublistTest)
     [1m[30msublist_test.exs:44[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 1, 2], [1, 1, 1, 2]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:45: (test)

  * test sublist early in huge list[31m  * test sublist early in huge list (160.3ms)[0m

  6) test sublist early in huge list (SublistTest)
     [1m[30msublist_test.exs:48[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([3, 4, 5], Enum.to_list(1..1000000)) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:49: (test)

  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.4 seconds (0.1s on load, 0.3s on tests)
[31m20 tests, 6 failures, 10 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable a is unused
  sublist.exs:27

[33mwarning: [0mvariable b is unused
  sublist.exs:27

[33mwarning: [0mvariable index is unused
  sublist.exs:27

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (2.7ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([], [nil]) == :sublist
     [36mlhs:  [0m:unequal
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.02ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([nil], []) == :superlist
     [36mlhs:  [0m:unequal
     [36mrhs:  [0m:superlist
     [36mstacktrace:[0m
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (153.3ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.01ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (181.4ms)[0m
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.4 seconds (0.1s on load, 0.3s on tests)
[31m20 tests, 2 failures, 10 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable a is unused
  sublist.exs:27

[33mwarning: [0mvariable b is unused
  sublist.exs:27

[33mwarning: [0mvariable index is unused
  sublist.exs:27

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (155.0ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (164.6ms)[0m
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.4 seconds (0.1s on load, 0.3s on tests)
[32m20 tests, 0 failures, 10 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable a is unused
  sublist.exs:27

[33mwarning: [0mvariable b is unused
  sublist.exs:27

[33mwarning: [0mvariable index is unused
  sublist.exs:27

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (147.9ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (168.6ms)[0m
  * test huge sublist not in huge list[33mwarning: [0mvariable a is unused
  sublist.exs:27

[33mwarning: [0mvariable b is unused
  sublist.exs:27

[33mwarning: [0mvariable index is unused
  sublist.exs:27

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.01ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (184.5ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (168.2ms)[0m
  * test huge sublist not in huge list[33mwarning: [0mvariable a is unused
  sublist.exs:27

[33mwarning: [0mvariable b is unused
  sublist.exs:27

[33mwarning: [0mvariable index is unused
  sublist.exs:27

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (3.6ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       :erlang.hd([])
       sublist.exs:32: Sublist.is_superlist/4
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.01ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       :erlang.hd([])
       sublist.exs:32: Sublist.is_superlist/4
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (163.3ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (172.2ms)[0m
  * test huge sublist not in huge listExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (2.8ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       :erlang.hd([])
       sublist.exs:31: Sublist.is_superlist/4
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.01ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       :erlang.hd([])
       sublist.exs:31: Sublist.is_superlist/4
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (156.7ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (170.8ms)[0m
  * test huge sublist not in huge listExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (2.8ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       :erlang.hd([])
       sublist.exs:31: Sublist.is_superlist/4
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.01ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       :erlang.hd([])
       sublist.exs:31: Sublist.is_superlist/4
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (147.6ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (163.3ms)[0m
  * test huge sublist not in huge listExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (2.9ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (CondClauseError) no cond clause evaluated to a true value[0m
     [36mstacktrace:[0m
       Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.01ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (CondClauseError) no cond clause evaluated to a true value[0m
     [36mstacktrace:[0m
       Sublist.is_superlist/2
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[31m  * test 1 is not 2 (0.01ms)[0m

  3) test 1 is not 2 (SublistTest)
     [1m[30msublist_test.exs:23[0m
     [31m** (CondClauseError) no cond clause evaluated to a true value[0m
     [36mstacktrace:[0m
       Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:24: (test)

  * test comparing massive equal lists[32m  * test comparing massive equal lists (158.4ms)[0m
  * test sublist at start[31m  * test sublist at start (0.03ms)[0m

  4) test sublist at start (SublistTest)
     [1m[30msublist_test.exs:32[0m
     [31m** (CondClauseError) no cond clause evaluated to a true value[0m
     [36mstacktrace:[0m
       Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:33: (test)

  * test sublist in middle[31m  * test sublist in middle (0.01ms)[0m

  5) test sublist in middle (SublistTest)
     [1m[30msublist_test.exs:36[0m
     [31m** (CondClauseError) no cond clause evaluated to a true value[0m
     [36mstacktrace:[0m
       Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:37: (test)

  * test sublist at end[31m  * test sublist at end (0.00ms)[0m

  6) test sublist at end (SublistTest)
     [1m[30msublist_test.exs:40[0m
     [31m** (CondClauseError) no cond clause evaluated to a true value[0m
     [36mstacktrace:[0m
       Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:41: (test)

  * test partially matching sublist at start[31m  * test partially matching sublist at start (0.01ms)[0m

  7) test partially matching sublist at start (SublistTest)
     [1m[30msublist_test.exs:44[0m
     [31m** (CondClauseError) no cond clause evaluated to a true value[0m
     [36mstacktrace:[0m
       Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:45: (test)

  * test sublist early in huge list[31m  * test sublist early in huge list (165.0ms)[0m

  8) test sublist early in huge list (SublistTest)
     [1m[30msublist_test.exs:48[0m
     [31m** (CondClauseError) no cond clause evaluated to a true value[0m
     [36mstacktrace:[0m
       Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:49: (test)

  * test huge sublist not in huge listExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (3.0ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       :erlang.hd([])
       sublist.exs:36: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.01ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       :erlang.hd([])
       sublist.exs:36: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (160.5ms)[0m
  * test sublist at start[32m  * test sublist at start (0.00ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (157.5ms)[0m
  * test huge sublist not in huge list[33mwarning: [0mmodule attribute @tag in code block has no effect as it is never returned (remove the attribute or assign it to _ to avoid warnings)
  sublist_test.exs:52

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (2.9ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       :erlang.hd([])
       sublist.exs:36: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.01ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       :erlang.hd([])
       sublist.exs:36: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (153.3ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (159.7ms)[0m
  * test huge sublist not in huge listExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (2.9ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       :erlang.hd([])
       sublist.exs:36: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.01ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       :erlang.hd([])
       sublist.exs:36: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (154.6ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (162.4ms)[0m
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.4 seconds (0.09s on load, 0.3s on tests)
[31m20 tests, 2 failures, 10 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (3.1ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       :erlang.hd([])
       sublist.exs:38: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.01ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (ArgumentError) argument error[0m
     [36mstacktrace:[0m
       :erlang.hd([])
       sublist.exs:38: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (169.7ms)[0m
  * test sublist at start[32m  * test sublist at start (0.00ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (161.4ms)[0m
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.4 seconds (0.1s on load, 0.3s on tests)
[31m20 tests, 2 failures, 10 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.03ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (151.6ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (154.6ms)[0m
  * test huge sublist not in huge list  * test huge sublist not in huge list (skipped)
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.3 seconds (0.09s on load, 0.3s on tests)
[32m20 tests, 0 failures, 10 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (155.8ms)[0m
  * test sublist at start[32m  * test sublist at start (0.00ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (162.2ms)[0m
  * test huge sublist not in huge listExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (4.1ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (Enum.EmptyError) empty error[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1589: Enum.reduce/2
       sublist.exs:34: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.01ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (Enum.EmptyError) empty error[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1589: Enum.reduce/2
       sublist.exs:34: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (146.6ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (240.3ms)[0m
  * test huge sublist not in huge list[31m  * test huge sublist not in huge list (338.1ms)[0m

  3) test huge sublist not in huge list (SublistTest)
     [1m[30msublist_test.exs:52[0m
     [31m** (CondClauseError) no cond clause evaluated to a true value[0m
     [36mstacktrace:[0m
       Sublist.is_superlist/2
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:53: (test)

  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.8 seconds (0.1s on load, 0.7s on tests)
[31m20 tests, 3 failures, 9 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[31m  * test empty equals empty (2.2ms)[0m

  1) test empty equals empty (SublistTest)
     [1m[30msublist_test.exs:11[0m
     [31m** (Enum.EmptyError) empty error[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1589: Enum.reduce/2
       sublist.exs:8: Sublist.compare/2
       sublist_test.exs:12: (test)

  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (0.01ms)[0m

  2) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (Enum.EmptyError) empty error[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1589: Enum.reduce/2
       sublist.exs:8: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.01ms)[0m

  3) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (Enum.EmptyError) empty error[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1589: Enum.reduce/2
       sublist.exs:8: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (205.6ms)[0m
  * test sublist at start[31m  * test sublist at start (1.2ms)[0m

  4) test sublist at start (SublistTest)
     [1m[30msublist_test.exs:32[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 3], [1, 2, 3, 4, 5]) == :sublist
     [36mlhs:  [0m:unequal
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:33: (test)

  * test sublist in middle[31m  * test sublist in middle (0.02ms)[0m

  5) test sublist in middle (SublistTest)
     [1m[30msublist_test.exs:36[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([4, 3, 2], [5, 4, 3, 2, 1]) == :sublist
     [36mlhs:  [0m:unequal
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:37: (test)

  * test sublist at end[32m  * test sublist at end (0.01ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[31m  * test sublist early in huge list (200.4ms)[0m

  6) test sublist early in huge list (SublistTest)
     [1m[30msublist_test.exs:48[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([3, 4, 5], Enum.to_list(1..1000000)) == :sublist
     [36mlhs:  [0m:unequal
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:49: (test)

  * test huge sublist not in huge listExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (3.0ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (Enum.EmptyError) empty error[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1589: Enum.reduce/2
       sublist.exs:36: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.01ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (Enum.EmptyError) empty error[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1589: Enum.reduce/2
       sublist.exs:36: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (153.0ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (226.5ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (326.4ms)[0m
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.8 seconds (0.1s on load, 0.7s on tests)
[31m20 tests, 2 failures, 9 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (151.8ms)[0m
  * test sublist at start[32m  * test sublist at start (0.00ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (160.7ms)[0m
  * test huge sublist not in huge listExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (160.6ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (165.3ms)[0m
  * test huge sublist not in huge listExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (2.9ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (Enum.EmptyError) empty error[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1589: Enum.reduce/2
       sublist.exs:35: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.02ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (Enum.EmptyError) empty error[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1589: Enum.reduce/2
       sublist.exs:35: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (147.9ms)[0m
  * test sublist at start[31m  * test sublist at start (1.4ms)[0m

  3) test sublist at start (SublistTest)
     [1m[30msublist_test.exs:32[0m
     [31m** (CondClauseError) no cond clause evaluated to a true value[0m
     [36mstacktrace:[0m
       Sublist.is_superlist/2
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:33: (test)

  * test sublist in middle[31m  * test sublist in middle (0.02ms)[0m

  4) test sublist in middle (SublistTest)
     [1m[30msublist_test.exs:36[0m
     [31m** (CondClauseError) no cond clause evaluated to a true value[0m
     [36mstacktrace:[0m
       Sublist.is_superlist/2
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:37: (test)

  * test sublist at end[32m  * test sublist at end (0.01ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[31m  * test sublist early in huge list (208.6ms)[0m

  5) test sublist early in huge list (SublistTest)
     [1m[30msublist_test.exs:48[0m
     [31m** (CondClauseError) no cond clause evaluated to a true value[0m
     [36mstacktrace:[0m
       Sublist.is_superlist/2
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:49: (test)

  * test huge sublist not in huge listExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (2.8ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (Enum.EmptyError) empty error[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1589: Enum.reduce/2
       sublist.exs:37: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.02ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (Enum.EmptyError) empty error[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1589: Enum.reduce/2
       sublist.exs:37: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (153.3ms)[0m
  * test sublist at start[31m  * test sublist at start (1.1ms)[0m

  3) test sublist at start (SublistTest)
     [1m[30msublist_test.exs:32[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 3], [1, 2, 3, 4, 5]) == :sublist
     [36mlhs:  [0m:unequal
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:33: (test)

  * test sublist in middle[31m  * test sublist in middle (0.02ms)[0m

  4) test sublist in middle (SublistTest)
     [1m[30msublist_test.exs:36[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([4, 3, 2], [5, 4, 3, 2, 1]) == :sublist
     [36mlhs:  [0m:unequal
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:37: (test)

  * test sublist at end[32m  * test sublist at end (0.01ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.02ms)[0m
  * test sublist early in huge list[31m  * test sublist early in huge list (192.5ms)[0m

  5) test sublist early in huge list (SublistTest)
     [1m[30msublist_test.exs:48[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([3, 4, 5], Enum.to_list(1..1000000)) == :sublist
     [36mlhs:  [0m:unequal
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:49: (test)

  * test huge sublist not in huge listExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (2.6ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (Enum.EmptyError) empty error[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1589: Enum.reduce/2
       sublist.exs:37: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.02ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (Enum.EmptyError) empty error[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1589: Enum.reduce/2
       sublist.exs:37: Sublist.is_superlist/4
       sublist.exs:27: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (156.5ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.03ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (262.8ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (378.1ms)[0m
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.9 seconds (0.1s on load, 0.8s on tests)
[31m20 tests, 2 failures, 9 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (149.2ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.02ms)[0m
  * test sublist at end[32m  * test sublist at end (0.02ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (251.9ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (372.7ms)[0m
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end  * test superlist at end (skipped)
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.8 seconds (0.09s on load, 0.7s on tests)
[32m20 tests, 0 failures, 9 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (167.0ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (239.7ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (378.3ms)[0m
  * test superlist at start  * test superlist at start (skipped)
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end[32m  * test superlist at end (0.02ms)[0m
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.8 seconds (0.09s on load, 0.7s on tests)
[32m20 tests, 0 failures, 8 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (154.8ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (248.2ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (376.1ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle  * test superlist in middle (skipped)
  * test superlist at end[32m  * test superlist at end (0.01ms)[0m
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.8 seconds (0.09s on load, 0.7s on tests)
[32m20 tests, 0 failures, 7 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (168.0ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (238.7ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (402.5ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.01ms)[0m
  * test superlist at end[32m  * test superlist at end (0.00ms)[0m
  * test 1 and 2 does not contain 3  * test 1 and 2 does not contain 3 (skipped)
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.9 seconds (0.1s on load, 0.8s on tests)
[32m20 tests, 0 failures, 6 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (163.3ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.01ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (246.0ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (369.6ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.01ms)[0m
  * test superlist at end[32m  * test superlist at end (0.01ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start  * test partially matching superlist at start (skipped)
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.8 seconds (0.1s on load, 0.7s on tests)
[32m20 tests, 0 failures, 5 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (148.7ms)[0m
  * test sublist at start[32m  * test sublist at start (0.02ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.01ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (273.0ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (370.6ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.02ms)[0m
  * test superlist at end[32m  * test superlist at end (0.01ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[32m  * test partially matching superlist at start (0.01ms)[0m
  * test superlist early in huge list  * test superlist early in huge list (skipped)
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 0.8 seconds (0.1s on load, 0.7s on tests)
[32m20 tests, 0 failures, 4 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (158.8ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.01ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (240.6ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (389.7ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.01ms)[0m
  * test superlist at end[32m  * test superlist at end (0.00ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[32m  * test partially matching superlist at start (0.00ms)[0m
  * test superlist early in huge list[32m  * test superlist early in huge list (241.1ms)[0m
  * test strict equality needed  * test strict equality needed (skipped)
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 1.1 seconds (0.1s on load, 1.0s on tests)
[32m20 tests, 0 failures, 3 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (147.9ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (252.8ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (396.7ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.02ms)[0m
  * test superlist at end[32m  * test superlist at end (0.01ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[32m  * test partially matching superlist at start (0.01ms)[0m
  * test superlist early in huge list[32m  * test superlist early in huge list (227.4ms)[0m
  * test strict equality needed[31m  * test strict equality needed (2.2ms)[0m

  1) test strict equality needed (SublistTest)
     [1m[30msublist_test.exs:82[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1], [1.0, 2]) == :unequal
     [36mlhs:  [0m:sublist
     [36mrhs:  [0m:unequal
     [36mstacktrace:[0m
       sublist_test.exs:83: (test)

  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 1.1 seconds (0.09s on load, 1.0s on tests)
[31m20 tests, 1 failure, 2 skipped[0m

Randomized with seed 0
** (CompileError) sublist.exs:46: undefined function to_integer/1
    (stdlib) lists.erl:1337: :lists.foreach/2
    (stdlib) erl_eval.erl:670: :erl_eval.do_apply/6

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (151.8ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.01ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (253.6ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (390.6ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.01ms)[0m
  * test superlist at end[32m  * test superlist at end (0.00ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[32m  * test partially matching superlist at start (0.00ms)[0m
  * test superlist early in huge list[32m  * test superlist early in huge list (247.6ms)[0m
  * test strict equality needed[31m  * test strict equality needed (2.2ms)[0m

  1) test strict equality needed (SublistTest)
     [1m[30msublist_test.exs:82[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1], [1.0, 2]) == :unequal
     [36mlhs:  [0m:sublist
     [36mrhs:  [0m:unequal
     [36mstacktrace:[0m
       sublist_test.exs:83: (test)

  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 1.1 seconds (0.1s on load, 1.0s on tests)
[31m20 tests, 1 failure, 2 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (153.1ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (233.7ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (385.3ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.01ms)[0m
  * test superlist at end[32m  * test superlist at end (0.00ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[32m  * test partially matching superlist at start (0.01ms)[0m
  * test superlist early in huge list[32m  * test superlist early in huge list (229.0ms)[0m
  * test strict equality needed[32m  * test strict equality needed (0.01ms)[0m
  * test recurring values sublist  * test recurring values sublist (skipped)
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 1.1 seconds (0.1s on load, 1.0s on tests)
[32m20 tests, 0 failures, 2 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (153.2ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.01ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (250.4ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (394.1ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.01ms)[0m
  * test superlist at end[32m  * test superlist at end (0.00ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[32m  * test partially matching superlist at start (0.01ms)[0m
  * test superlist early in huge list[32m  * test superlist early in huge list (233.1ms)[0m
  * test strict equality needed[32m  * test strict equality needed (0.01ms)[0m
  * test recurring values sublist[32m  * test recurring values sublist (0.01ms)[0m
  * test recurring values unequal  * test recurring values unequal (skipped)


Finished in 1.1 seconds (0.09s on load, 1.0s on tests)
[32m20 tests, 0 failures, 1 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (154.1ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (242.8ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (377.7ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.01ms)[0m
  * test superlist at end[32m  * test superlist at end (0.01ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[32m  * test partially matching superlist at start (0.01ms)[0m
  * test superlist early in huge list[32m  * test superlist early in huge list (239.9ms)[0m
  * test strict equality needed[32m  * test strict equality needed (0.01ms)[0m
  * test recurring values sublist[32m  * test recurring values sublist (0.01ms)[0m
  * test recurring values unequal[32m  * test recurring values unequal (0.02ms)[0m


Finished in 1.1 seconds (0.09s on load, 1.0s on tests)
[32m20 tests, 0 failures[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (157.7ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (226.0ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (388.0ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.01ms)[0m
  * test superlist at end[32m  * test superlist at end (0.00ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[32m  * test partially matching superlist at start (0.00ms)[0m
  * test superlist early in huge list[32m  * test superlist early in huge list (237.5ms)[0m
  * test strict equality neededExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (172.0ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (243.5ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (378.6ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.01ms)[0m
  * test superlist at end[32m  * test superlist at end (0.01ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[32m  * test partially matching superlist at start (0.01ms)[0m
  * test superlist early in huge list[32m  * test superlist early in huge list (208.4ms)[0m
  * test strict equality needed[32m  * test strict equality needed (0.02ms)[0m
  * test recurring values sublist[32m  * test recurring values sublist (0.01ms)[0m
  * test recurring values unequal[32m  * test recurring values unequal (0.07ms)[0m


Finished in 1.0 seconds (0.09s on load, 1.0s on tests)
[32m20 tests, 0 failures[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (150.4ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.01ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (242.2ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (386.8ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.01ms)[0m
  * test superlist at end[32m  * test superlist at end (0.01ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[32m  * test partially matching superlist at start (0.01ms)[0m
  * test superlist early in huge list[32m  * test superlist early in huge list (245.4ms)[0m
  * test strict equality neededExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (153.7ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (257.0ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (406.3ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.01ms)[0m
  * test superlist at end[32m  * test superlist at end (0.01ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[32m  * test partially matching superlist at start (0.00ms)[0m
  * test superlist early in huge list[32m  * test superlist early in huge list (234.0ms)[0m
  * test strict equality needed[32m  * test strict equality needed (0.01ms)[0m
  * test recurring values sublist[32m  * test recurring values sublist (0.01ms)[0m
  * test recurring values unequal[32m  * test recurring values unequal (0.01ms)[0m


Finished in 1.1 seconds (0.09s on load, 1.0s on tests)
[32m20 tests, 0 failures[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.01ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (165.2ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (167.8ms)[0m
  * test huge sublist not in huge listExcluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.01ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (145.2ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.01ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (246.5ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (373.7ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.01ms)[0m
  * test superlist at end[32m  * test superlist at end (0.00ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[32m  * test partially matching superlist at start (0.00ms)[0m
  * test superlist early in huge list[32m  * test superlist early in huge list (234.9ms)[0m
  * test strict equality needed[32m  * test strict equality needed (0.02ms)[0m
  * test recurring values sublist[32m  * test recurring values sublist (0.01ms)[0m
  * test recurring values unequal[32m  * test recurring values unequal (0.03ms)[0m


Finished in 1.0 seconds (0.09s on load, 1.0s on tests)
[32m20 tests, 0 failures[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (2.8ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31m** (Enum.EmptyError) empty error[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1589: Enum.reduce/2
       sublist.exs:34: Sublist.is_superlist/4
       sublist.exs:23: Sublist.is_superlist/2
       sublist.exs:12: Sublist.compare/2
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.02ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31m** (Enum.EmptyError) empty error[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1589: Enum.reduce/2
       sublist.exs:34: Sublist.is_superlist/4
       sublist.exs:23: Sublist.is_superlist/2
       sublist.exs:10: Sublist.compare/2
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (150.7ms)[0m
  * test sublist at start[32m  * test sublist at start (0.01ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.01ms)[0m
  * test sublist at end[32m  * test sublist at end (0.01ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.01ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (243.3ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (365.6ms)[0m
  * test superlist at start[32m  * test superlist at start (0.01ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.01ms)[0m
  * test superlist at end[32m  * test superlist at end (0.01ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[32m  * test partially matching superlist at start (0.01ms)[0m
  * test superlist early in huge list[32m  * test superlist early in huge list (238.0ms)[0m
  * test strict equality needed[32m  * test strict equality needed (0.01ms)[0m
  * test recurring values sublist[32m  * test recurring values sublist (0.01ms)[0m
  * test recurring values unequal[32m  * test recurring values unequal (0.02ms)[0m


Finished in 1.1 seconds (0.1s on load, 1.0s on tests)
[31m20 tests, 2 failures[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (3.1ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([], [nil]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.03ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([nil], []) == :superlist
     [36mlhs:  [0m:sublist
     [36mrhs:  [0m:superlist
     [36mstacktrace:[0m
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (169.8ms)[0m
  * test sublist at start[31m  * test sublist at start (0.03ms)[0m

  3) test sublist at start (SublistTest)
     [1m[30msublist_test.exs:32[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 3], [1, 2, 3, 4, 5]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:33: (test)

  * test sublist in middle[31m  * test sublist in middle (0.01ms)[0m

  4) test sublist in middle (SublistTest)
     [1m[30msublist_test.exs:36[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([4, 3, 2], [5, 4, 3, 2, 1]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:37: (test)

  * test sublist at end[31m  * test sublist at end (0.02ms)[0m

  5) test sublist at end (SublistTest)
     [1m[30msublist_test.exs:40[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([3, 4, 5], [1, 2, 3, 4, 5]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:41: (test)

  * test partially matching sublist at start[31m  * test partially matching sublist at start (0.01ms)[0m

  6) test partially matching sublist at start (SublistTest)
     [1m[30msublist_test.exs:44[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 1, 2], [1, 1, 1, 2]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:45: (test)

  * test sublist early in huge list[31m  * test sublist early in huge list (162.2ms)[0m

  7) test sublist early in huge list (SublistTest)
     [1m[30msublist_test.exs:48[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([3, 4, 5], Enum.to_list(1..1000000)) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:49: (test)

  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (845.4ms)[0m
  * test superlist at start[31m  * test superlist at start (0.02ms)[0m

  8) test superlist at start (SublistTest)
     [1m[30msublist_test.exs:58[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 3, 4, 5], [1, 2, 3]) == :superlist
     [36mlhs:  [0m:sublist
     [36mrhs:  [0m:superlist
     [36mstacktrace:[0m
       sublist_test.exs:59: (test)

  * test superlist in middle[31m  * test superlist in middle (0.02ms)[0m

  9) test superlist in middle (SublistTest)
     [1m[30msublist_test.exs:62[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([5, 4, 3, 2, 1], [4, 3, 2]) == :superlist
     [36mlhs:  [0m:sublist
     [36mrhs:  [0m:superlist
     [36mstacktrace:[0m
       sublist_test.exs:63: (test)

  * test superlist at end[31m  * test superlist at end (0.01ms)[0m

 10) test superlist at end (SublistTest)
     [1m[30msublist_test.exs:66[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 3, 4, 5], [3, 4, 5]) == :superlist
     [36mlhs:  [0m:sublist
     [36mrhs:  [0m:superlist
     [36mstacktrace:[0m
       sublist_test.exs:67: (test)

  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[31m  * test partially matching superlist at start (0.02ms)[0m

 11) test partially matching superlist at start (SublistTest)
     [1m[30msublist_test.exs:74[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 1, 1, 2], [1, 1, 2]) == :superlist
     [36mlhs:  [0m:sublist
     [36mrhs:  [0m:superlist
     [36mstacktrace:[0m
       sublist_test.exs:75: (test)

  * test superlist early in huge list[31m  * test superlist early in huge list (169.4ms)[0m

 12) test superlist early in huge list (SublistTest)
     [1m[30msublist_test.exs:78[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare(Enum.to_list(1..1000000), [3, 4, 5]) == :superlist
     [36mlhs:  [0m:sublist
     [36mrhs:  [0m:superlist
     [36mstacktrace:[0m
       sublist_test.exs:79: (test)

  * test strict equality needed[32m  * test strict equality needed (0.00ms)[0m
  * test recurring values sublist[31m  * test recurring values sublist (0.02ms)[0m

 13) test recurring values sublist (SublistTest)
     [1m[30msublist_test.exs:86[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 1, 2, 3], [1, 2, 3, 1, 2, 1, 2, 3, 2, 1]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:87: (test)

  * test recurring values unequal[32m  * test recurring values unequal (0.00ms)[0m


Finished in 1.4 seconds (0.1s on load, 1.3s on tests)
[31m20 tests, 13 failures[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[31m  * test empty is a sublist of anything (2.7ms)[0m

  1) test empty is a sublist of anything (SublistTest)
     [1m[30msublist_test.exs:15[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([], [nil]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:16: (test)

  * test anything is a superlist of empty[31m  * test anything is a superlist of empty (0.04ms)[0m

  2) test anything is a superlist of empty (SublistTest)
     [1m[30msublist_test.exs:19[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([nil], []) == :superlist
     [36mlhs:  [0m:sublist
     [36mrhs:  [0m:superlist
     [36mstacktrace:[0m
       sublist_test.exs:20: (test)

  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (172.5ms)[0m
  * test sublist at start[31m  * test sublist at start (0.02ms)[0m

  3) test sublist at start (SublistTest)
     [1m[30msublist_test.exs:32[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 3], [1, 2, 3, 4, 5]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:33: (test)

  * test sublist in middle[31m  * test sublist in middle (0.01ms)[0m

  4) test sublist in middle (SublistTest)
     [1m[30msublist_test.exs:36[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([4, 3, 2], [5, 4, 3, 2, 1]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:37: (test)

  * test sublist at end[31m  * test sublist at end (0.01ms)[0m

  5) test sublist at end (SublistTest)
     [1m[30msublist_test.exs:40[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([3, 4, 5], [1, 2, 3, 4, 5]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:41: (test)

  * test partially matching sublist at start[31m  * test partially matching sublist at start (0.01ms)[0m

  6) test partially matching sublist at start (SublistTest)
     [1m[30msublist_test.exs:44[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 1, 2], [1, 1, 1, 2]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:45: (test)

  * test sublist early in huge list[31m  * test sublist early in huge list (165.2ms)[0m

  7) test sublist early in huge list (SublistTest)
     [1m[30msublist_test.exs:48[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([3, 4, 5], Enum.to_list(1..1000000)) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:49: (test)

  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (844.2ms)[0m
  * test superlist at start[31m  * test superlist at start (0.03ms)[0m

  8) test superlist at start (SublistTest)
     [1m[30msublist_test.exs:58[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 3, 4, 5], [1, 2, 3]) == :superlist
     [36mlhs:  [0m:sublist
     [36mrhs:  [0m:superlist
     [36mstacktrace:[0m
       sublist_test.exs:59: (test)

  * test superlist in middle[31m  * test superlist in middle (0.01ms)[0m

  9) test superlist in middle (SublistTest)
     [1m[30msublist_test.exs:62[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([5, 4, 3, 2, 1], [4, 3, 2]) == :superlist
     [36mlhs:  [0m:sublist
     [36mrhs:  [0m:superlist
     [36mstacktrace:[0m
       sublist_test.exs:63: (test)

  * test superlist at end[31m  * test superlist at end (0.01ms)[0m

 10) test superlist at end (SublistTest)
     [1m[30msublist_test.exs:66[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 3, 4, 5], [3, 4, 5]) == :superlist
     [36mlhs:  [0m:sublist
     [36mrhs:  [0m:superlist
     [36mstacktrace:[0m
       sublist_test.exs:67: (test)

  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[31m  * test partially matching superlist at start (0.02ms)[0m

 11) test partially matching superlist at start (SublistTest)
     [1m[30msublist_test.exs:74[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 1, 1, 2], [1, 1, 2]) == :superlist
     [36mlhs:  [0m:sublist
     [36mrhs:  [0m:superlist
     [36mstacktrace:[0m
       sublist_test.exs:75: (test)

  * test superlist early in huge list[31m  * test superlist early in huge list (164.3ms)[0m

 12) test superlist early in huge list (SublistTest)
     [1m[30msublist_test.exs:78[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare(Enum.to_list(1..1000000), [3, 4, 5]) == :superlist
     [36mlhs:  [0m:sublist
     [36mrhs:  [0m:superlist
     [36mstacktrace:[0m
       sublist_test.exs:79: (test)

  * test strict equality needed[32m  * test strict equality needed (0.00ms)[0m
  * test recurring values sublist[31m  * test recurring values sublist (0.01ms)[0m

 13) test recurring values sublist (SublistTest)
     [1m[30msublist_test.exs:86[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mSublist.compare([1, 2, 1, 2, 3], [1, 2, 3, 1, 2, 1, 2, 3, 2, 1]) == :sublist
     [36mlhs:  [0m:superlist
     [36mrhs:  [0m:sublist
     [36mstacktrace:[0m
       sublist_test.exs:87: (test)

  * test recurring values unequal[32m  * test recurring values unequal (0.00ms)[0m


Finished in 1.4 seconds (0.09s on load, 1.3s on tests)
[31m20 tests, 13 failures[0m

Randomized with seed 0
[33mwarning: [0mvariable a is unused
  sublist.exs:15

Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (158.2ms)[0m
  * test sublist at start[32m  * test sublist at start (0.00ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (153.4ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (323.8ms)[0m
  * test superlist at start[32m  * test superlist at start (0.00ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.00ms)[0m
  * test superlist at end[32m  * test superlist at end (0.00ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[32m  * test partially matching superlist at start (0.00ms)[0m
  * test superlist early in huge list[32m  * test superlist early in huge list (161.6ms)[0m
  * test strict equality needed[32m  * test strict equality needed (0.00ms)[0m
  * test recurring values sublist[32m  * test recurring values sublist (0.00ms)[0m
  * test recurring values unequal[32m  * test recurring values unequal (0.00ms)[0m


Finished in 0.9 seconds (0.1s on load, 0.8s on tests)
[32m20 tests, 0 failures[0m

Randomized with seed 0
Excluding tags: [:pending]


SublistTest
  * test empty equals empty[32m  * test empty equals empty (0.00ms)[0m
  * test empty is a sublist of anything[32m  * test empty is a sublist of anything (0.00ms)[0m
  * test anything is a superlist of empty[32m  * test anything is a superlist of empty (0.00ms)[0m
  * test 1 is not 2[32m  * test 1 is not 2 (0.00ms)[0m
  * test comparing massive equal lists[32m  * test comparing massive equal lists (165.6ms)[0m
  * test sublist at start[32m  * test sublist at start (0.00ms)[0m
  * test sublist in middle[32m  * test sublist in middle (0.00ms)[0m
  * test sublist at end[32m  * test sublist at end (0.00ms)[0m
  * test partially matching sublist at start[32m  * test partially matching sublist at start (0.00ms)[0m
  * test sublist early in huge list[32m  * test sublist early in huge list (158.8ms)[0m
  * test huge sublist not in huge list[32m  * test huge sublist not in huge list (817.7ms)[0m
  * test superlist at start[32m  * test superlist at start (0.00ms)[0m
  * test superlist in middle[32m  * test superlist in middle (0.00ms)[0m
  * test superlist at end[32m  * test superlist at end (0.00ms)[0m
  * test 1 and 2 does not contain 3[32m  * test 1 and 2 does not contain 3 (0.00ms)[0m
  * test partially matching superlist at start[32m  * test partially matching superlist at start (0.00ms)[0m
  * test superlist early in huge list[32m  * test superlist early in huge list (153.8ms)[0m
  * test strict equality needed[32m  * test strict equality needed (0.00ms)[0m
  * test recurring values sublist[32m  * test recurring values sublist (0.01ms)[0m
  * test recurring values unequal[32m  * test recurring values unequal (0.01ms)[0m


Finished in 1.4 seconds (0.1s on load, 1.3s on tests)
[32m20 tests, 0 failures[0m

Randomized with seed 0
