[33mwarning: [0mvariable board is unused
  minesweeper.exs:8

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[31m  * test zero size board (2.8ms)[0m

  1) test zero size board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:13[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0mnil
     [36mrhs:  [0m[]
     [36mstacktrace:[0m
       minesweeper_test.exs:15: (test)

  * test empty board  * test empty board (skipped)
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded  * test surrounded (skipped)
  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.06 seconds (0.06s on load, 0.00s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable board is unused
  minesweeper.exs:7

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (0.01ms)[0m
  * test empty board  * test empty board (skipped)
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded  * test surrounded (skipped)
  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.05 seconds (0.05s on load, 0.00s on tests)
[32m7 tests, 0 failures, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable board is unused
  minesweeper.exs:7

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (0.00ms)[0m
  * test empty board[31m  * test empty board (3.1ms)[0m

  1) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m[]
     [36mrhs:  [0m[[32m"   "[0m[32m, [0m[32m"   "[0m[32m, [0m[32m"   "[0m]
     [36mstacktrace:[0m
       minesweeper_test.exs:22: (test)

  * test board full of mines  * test board full of mines (skipped)
  * test surrounded  * test surrounded (skipped)
  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[31m7 tests, 1 failure, 5 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (0.00ms)[0m
  * test empty board[32m  * test empty board (0.04ms)[0m
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded  * test surrounded (skipped)
  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.04 seconds (0.04s on load, 0.00s on tests)
[32m7 tests, 0 failures, 5 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (0.00ms)[0m
  * test empty board[32m  * test empty board (0.09ms)[0m
  * test board full of mines[32m  * test board full of mines (0.02ms)[0m
  * test surrounded  * test surrounded (skipped)
  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.06 seconds (0.06s on load, 0.00s on tests)
[32m7 tests, 0 failures, 4 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (0.00ms)[0m
  * test empty board[32m  * test empty board (0.05ms)[0m
  * test board full of mines[32m  * test board full of mines (0.02ms)[0m
  * test surrounded[31m  * test surrounded (2.7ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m [0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:36: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.04 seconds (0.04s on load, 0.00s on tests)
[31m7 tests, 1 failure, 3 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable count is unused
  minesweeper.exs:8

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[31m  * test zero size board (2.6ms)[0m

  1) test zero size board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:13[0m
     [31m** (UndefinedFunctionError) function Enum.graphemes/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Enum.graphemes("")
       minesweeper.exs:9: Minesweeper.annotate/1
       minesweeper_test.exs:15: (test)

  * test empty board[31m  * test empty board (0.7ms)[0m

  2) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31m** (UndefinedFunctionError) function Enum.graphemes/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Enum.graphemes("         ")
       minesweeper.exs:9: Minesweeper.annotate/1
       minesweeper_test.exs:22: (test)

  * test board full of mines[31m  * test board full of mines (0.04ms)[0m

  3) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (UndefinedFunctionError) function Enum.graphemes/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Enum.graphemes("*********")
       minesweeper.exs:9: Minesweeper.annotate/1
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (0.07ms)[0m

  4) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (UndefinedFunctionError) function Enum.graphemes/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Enum.graphemes("**** ****")
       minesweeper.exs:9: Minesweeper.annotate/1
       minesweeper_test.exs:36: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.06 seconds (0.06s on load, 0.00s on tests)
[31m7 tests, 4 failures, 3 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable count is unused
  minesweeper.exs:8

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (4.9ms)[0m
  * test empty board[31m  * test empty board (3.9ms)[0m

  1) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31m** (UndefinedFunctionError) function String.replace/2 is undefined or private. Did you mean one of:
     
           * replace/3
           * replace/4
     [0m
     [36mstacktrace:[0m
       (elixir) String.replace("   ", "8")
       (elixir) lib/enum.ex:1184: Enum."-map/2-lists^map/1-0-"/2
       minesweeper_test.exs:22: (test)

  * test board full of mines[31m  * test board full of mines (0.1ms)[0m

  2) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (UndefinedFunctionError) function String.replace/2 is undefined or private. Did you mean one of:
     
           * replace/3
           * replace/4
     [0m
     [36mstacktrace:[0m
       (elixir) String.replace("***", "8")
       (elixir) lib/enum.ex:1184: Enum."-map/2-lists^map/1-0-"/2
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (0.07ms)[0m

  3) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (UndefinedFunctionError) function String.replace/2 is undefined or private. Did you mean one of:
     
           * replace/3
           * replace/4
     [0m
     [36mstacktrace:[0m
       (elixir) String.replace("***", "8")
       (elixir) lib/enum.ex:1184: Enum."-map/2-lists^map/1-0-"/2
       minesweeper_test.exs:36: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.08 seconds (0.08s on load, 0.00s on tests)
[31m7 tests, 3 failures, 3 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable count is unused
  minesweeper.exs:8

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (4.1ms)[0m
  * test empty board[31m  * test empty board (3.1ms)[0m

  1) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m[[31m"888"[0m, [31m"888"[0m, [31m"888"[0m]
     [36mrhs:  [0m[[32m"   "[0m, [32m"   "[0m, [32m"   "[0m]
     [36mstacktrace:[0m
       minesweeper_test.exs:22: (test)

  * test board full of mines[32m  * test board full of mines (0.06ms)[0m
  * test surrounded[32m  * test surrounded (0.04ms)[0m
  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.08 seconds (0.08s on load, 0.00s on tests)
[31m7 tests, 1 failure, 3 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (3.5ms)[0m
  * test empty board[32m  * test empty board (0.7ms)[0m
  * test board full of mines[31m  * test board full of mines (2.3ms)[0m

  1) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (FunctionClauseError) no function clause matching in String.replace/4[0m
     [36mstacktrace:[0m
       (elixir) lib/string.ex:1031: String.replace("***", " ", 9, [])
       (elixir) lib/enum.ex:1184: Enum."-map/2-lists^map/1-0-"/2
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (0.07ms)[0m

  2) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (FunctionClauseError) no function clause matching in String.replace/4[0m
     [36mstacktrace:[0m
       (elixir) lib/string.ex:1031: String.replace("***", " ", 8, [])
       (elixir) lib/enum.ex:1184: Enum."-map/2-lists^map/1-0-"/2
       minesweeper_test.exs:36: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.04 seconds (0.04s on load, 0.00s on tests)
[31m7 tests, 2 failures, 3 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (3.2ms)[0m
  * test empty board[32m  * test empty board (0.7ms)[0m
  * test board full of mines[31m  * test board full of mines (2.3ms)[0m

  1) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (FunctionClauseError) no function clause matching in String.replace/4[0m
     [36mstacktrace:[0m
       (elixir) lib/string.ex:1031: String.replace("***", " ", 9, [])
       (elixir) lib/enum.ex:1184: Enum."-map/2-lists^map/1-0-"/2
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (0.08ms)[0m

  2) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (FunctionClauseError) no function clause matching in String.replace/4[0m
     [36mstacktrace:[0m
       (elixir) lib/string.ex:1031: String.replace("***", " ", 8, [])
       (elixir) lib/enum.ex:1184: Enum."-map/2-lists^map/1-0-"/2
       minesweeper_test.exs:36: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.05 seconds (0.05s on load, 0.00s on tests)
[31m7 tests, 2 failures, 3 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (3.5ms)[0m
  * test empty board[32m  * test empty board (0.8ms)[0m
  * test board full of mines[32m  * test board full of mines (0.08ms)[0m
  * test surrounded[32m  * test surrounded (0.1ms)[0m
  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.05 seconds (0.05s on load, 0.00s on tests)
[32m7 tests, 0 failures, 3 skipped[0m

Randomized with seed 0
Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (4.5ms)[0m
  * test empty board[32m  * test empty board (1.1ms)[0m
  * test board full of mines[32m  * test board full of mines (0.09ms)[0m
  * test surrounded[32m  * test surrounded (0.06ms)[0m
  * test horizontal line[31m  * test horizontal line (3.1ms)[0m

  1) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:39[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["[31m2[0m*2*[31m2[0m"]
     [36mrhs:  [0m["[32m1[0m*2*[32m1[0m"]
     [36mstacktrace:[0m
       minesweeper_test.exs:41: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.04 seconds (0.04s on load, 0.00s on tests)
[31m7 tests, 1 failure, 2 skipped[0m

Randomized with seed 0
** (SyntaxError) minesweeper.exs:39: unexpected token: ")". "do" starting at line 37 is missing terminator "end"
    (elixir) lib/code.ex:321: Code.load_file/2
    minesweeper_test.exs:2: (file)
    (elixir) lib/code.ex:363: Code.require_file/2

[33mwarning: [0mfunction replace_space_w_count/3 is unused
  minesweeper.exs:33

[33mwarning: [0mvariable board is unused
  minesweeper.exs:24

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:24

** (CompileError) minesweeper.exs:12: undefined function find_first_space/1
    (stdlib) lists.erl:1338: :lists.foreach/2
    (stdlib) erl_eval.erl:670: :erl_eval.do_apply/6

[33mwarning: [0mfunction replace_space_w_count/3 is unused
  minesweeper.exs:40

[33mwarning: [0mvariable i is unused
  minesweeper.exs:27

[33mwarning: [0mvariable board is unused
  minesweeper.exs:31

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:31

** (CompileError) minesweeper.exs:15: undefined function j/0
    (stdlib) lists.erl:1338: :lists.foreach/2
    (stdlib) erl_eval.erl:670: :erl_eval.do_apply/6

[33mwarning: [0mfunction replace_space_w_count/3 is unused
  minesweeper.exs:40

[33mwarning: [0mvariable i is unused
  minesweeper.exs:27

[33mwarning: [0mvariable board is unused
  minesweeper.exs:31

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:31

** (CompileError) minesweeper.exs:17: undefined function replace_space_w_count/2
    (stdlib) lists.erl:1338: :lists.foreach/2
    (stdlib) erl_eval.erl:670: :erl_eval.do_apply/6

[33mwarning: [0mvariable i is unused
  minesweeper.exs:27

[33mwarning: [0mvariable board is unused
  minesweeper.exs:31

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:31

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:40

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[31m  * test zero size board (7.2ms)[0m

  1) test zero size board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:13[0m
     [31m** (Protocol.UndefinedError) protocol Enumerable not implemented for nil[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1: Enumerable.impl_for!/1
       (elixir) lib/enum.ex:116: Enumerable.reduce/3
       (elixir) lib/enum.ex:839: Enum.find/3
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:15: (test)

  * test empty board[31m  * test empty board (5.6ms)[0m

  2) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31m** (Protocol.UndefinedError) protocol Enumerable not implemented for {"   ", 0}[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1: Enumerable.impl_for!/1
       (elixir) lib/enum.ex:116: Enumerable.reduce/3
       (elixir) lib/enum.ex:839: Enum.find/3
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:22: (test)

  * test board full of mines[31m  * test board full of mines (3.1ms)[0m

  3) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (Protocol.UndefinedError) protocol Enumerable not implemented for nil[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1: Enumerable.impl_for!/1
       (elixir) lib/enum.ex:116: Enumerable.reduce/3
       (elixir) lib/enum.ex:839: Enum.find/3
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (4.2ms)[0m

  4) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (Protocol.UndefinedError) protocol Enumerable not implemented for {"* *", 1}[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1: Enumerable.impl_for!/1
       (elixir) lib/enum.ex:116: Enumerable.reduce/3
       (elixir) lib/enum.ex:839: Enum.find/3
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:36: (test)

  * test horizontal line[31m  * test horizontal line (4.3ms)[0m

  5) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:39[0m
     [31m** (Protocol.UndefinedError) protocol Enumerable not implemented for {" * * ", 0}[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1: Enumerable.impl_for!/1
       (elixir) lib/enum.ex:116: Enumerable.reduce/3
       (elixir) lib/enum.ex:839: Enum.find/3
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:41: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.1 seconds (0.08s on load, 0.02s on tests)
[31m7 tests, 5 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:27

[33mwarning: [0mvariable board is unused
  minesweeper.exs:31

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:31

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:40

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[31m  * test zero size board (7.7ms)[0m

  1) test zero size board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:13[0m
     [31m** (Protocol.UndefinedError) protocol Enumerable not implemented for nil[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1: Enumerable.impl_for!/1
       (elixir) lib/enum.ex:116: Enumerable.reduce/3
       (elixir) lib/enum.ex:839: Enum.find/3
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:15: (test)

  * test empty board[31m  * test empty board (6.3ms)[0m

  2) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31m** (Protocol.UndefinedError) protocol Enumerable not implemented for {"   ", 0}[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1: Enumerable.impl_for!/1
       (elixir) lib/enum.ex:116: Enumerable.reduce/3
       (elixir) lib/enum.ex:839: Enum.find/3
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:22: (test)

  * test board full of mines[31m  * test board full of mines (4.7ms)[0m

  3) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (Protocol.UndefinedError) protocol Enumerable not implemented for nil[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1: Enumerable.impl_for!/1
       (elixir) lib/enum.ex:116: Enumerable.reduce/3
       (elixir) lib/enum.ex:839: Enum.find/3
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (4.7ms)[0m

  4) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (Protocol.UndefinedError) protocol Enumerable not implemented for {"* *", 1}[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1: Enumerable.impl_for!/1
       (elixir) lib/enum.ex:116: Enumerable.reduce/3
       (elixir) lib/enum.ex:839: Enum.find/3
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:36: (test)

  * test horizontal line[31m  * test horizontal line (3.2ms)[0m

  5) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:39[0m
     [31m** (Protocol.UndefinedError) protocol Enumerable not implemented for {" * * ", 0}[0m
     [36mstacktrace:[0m
       (elixir) lib/enum.ex:1: Enumerable.impl_for!/1
       (elixir) lib/enum.ex:116: Enumerable.reduce/3
       (elixir) lib/enum.ex:839: Enum.find/3
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:41: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.1 seconds (0.08s on load, 0.02s on tests)
[31m7 tests, 5 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:27

[33mwarning: [0mvariable board is unused
  minesweeper.exs:36

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:36

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:45

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[31m  * test zero size board (4.3ms)[0m

  1) test zero size board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:13[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:15: (test)

  * test empty board[31m  * test empty board (2.7ms)[0m

  2) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31m** (UndefinedFunctionError) function Enum.graphemes/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Enum.graphemes("   ")
       minesweeper.exs:30: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:22: (test)

  * test board full of mines[31m  * test board full of mines (0.2ms)[0m

  3) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (1.8ms)[0m

  4) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (UndefinedFunctionError) function Enum.graphemes/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Enum.graphemes("* *")
       minesweeper.exs:30: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:36: (test)

  * test horizontal line[31m  * test horizontal line (1.0ms)[0m

  5) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:39[0m
     [31m** (UndefinedFunctionError) function Enum.graphemes/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) Enum.graphemes(" * * ")
       minesweeper.exs:30: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:41: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.09 seconds (0.08s on load, 0.01s on tests)
[31m7 tests, 5 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:27

[33mwarning: [0mvariable board is unused
  minesweeper.exs:36

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:36

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:45

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[31m  * test zero size board (8.2ms)[0m

  1) test zero size board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:13[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:15: (test)

  * test empty board[31m  * test empty board (13.2ms)[0m

  2) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31m** (UndefinedFunctionError) function List.at/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) List.at(0)
       minesweeper.exs:37: Minesweeper.count_horiz_bombs/2
       minesweeper.exs:16: Minesweeper.replace_space/1
       minesweeper_test.exs:22: (test)

  * test board full of mines[31m  * test board full of mines (0.1ms)[0m

  3) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (0.06ms)[0m

  4) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (UndefinedFunctionError) function List.at/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) List.at(1)
       minesweeper.exs:37: Minesweeper.count_horiz_bombs/2
       minesweeper.exs:16: Minesweeper.replace_space/1
       minesweeper_test.exs:36: (test)

  * test horizontal line[31m  * test horizontal line (0.1ms)[0m

  5) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:39[0m
     [31m** (UndefinedFunctionError) function List.at/1 is undefined or private[0m
     [36mstacktrace:[0m
       (elixir) List.at(0)
       minesweeper.exs:37: Minesweeper.count_horiz_bombs/2
       minesweeper.exs:16: Minesweeper.replace_space/1
       minesweeper_test.exs:41: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.08 seconds (0.06s on load, 0.02s on tests)
[31m7 tests, 5 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:27

[33mwarning: [0mvariable board is unused
  minesweeper.exs:36

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:36

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:45

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[31m  * test zero size board (2.2ms)[0m

  1) test zero size board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:13[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:15: (test)

  * test empty board[31m  * test empty board (3.8ms)[0m

  2) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31m** (UndefinedFunctionError) function Enum.at/1 is undefined or private. Did you mean one of:
     
           * at/2
           * at/3
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.at(0)
       minesweeper.exs:37: Minesweeper.count_horiz_bombs/2
       minesweeper.exs:16: Minesweeper.replace_space/1
       minesweeper_test.exs:22: (test)

  * test board full of mines[31m  * test board full of mines (0.1ms)[0m

  3) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (0.1ms)[0m

  4) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (UndefinedFunctionError) function Enum.at/1 is undefined or private. Did you mean one of:
     
           * at/2
           * at/3
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.at(1)
       minesweeper.exs:37: Minesweeper.count_horiz_bombs/2
       minesweeper.exs:16: Minesweeper.replace_space/1
       minesweeper_test.exs:36: (test)

  * test horizontal line[31m  * test horizontal line (0.08ms)[0m

  5) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:39[0m
     [31m** (UndefinedFunctionError) function Enum.at/1 is undefined or private. Did you mean one of:
     
           * at/2
           * at/3
     [0m
     [36mstacktrace:[0m
       (elixir) Enum.at(0)
       minesweeper.exs:37: Minesweeper.count_horiz_bombs/2
       minesweeper.exs:16: Minesweeper.replace_space/1
       minesweeper_test.exs:41: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.05 seconds (0.05s on load, 0.00s on tests)
[31m7 tests, 5 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:27

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:36

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:45

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[31m  * test zero size board (6.1ms)[0m

  1) test zero size board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:13[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:15: (test)

  * test empty board[31m  * test empty board (5.0ms)[0m

  2) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:22: (test)

  * test board full of mines[31m  * test board full of mines (0.04ms)[0m

  3) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (0.8ms)[0m

  4) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:36: (test)

  * test horizontal line[31m  * test horizontal line (0.9ms)[0m

  5) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:39[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:41: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.07 seconds (0.06s on load, 0.01s on tests)
[31m7 tests, 5 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:27

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:36

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:45

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[31m  * test zero size board (3.1ms)[0m

  1) test zero size board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:13[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:15: (test)

  * test empty board[31m  * test empty board (9.0ms)[0m

  2) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:22: (test)

  * test board full of mines[31m  * test board full of mines (0.03ms)[0m

  3) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (0.06ms)[0m

  4) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:36: (test)

  * test horizontal line[31m  * test horizontal line (0.1ms)[0m

  5) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:39[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:41: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.1 seconds (0.1s on load, 0.01s on tests)
[31m7 tests, 5 failures, 2 skipped[0m

Randomized with seed 0
** (SyntaxError) minesweeper.exs:32: unexpected token: "end". "{" starting at line 25 is missing terminator "}"
    (elixir) lib/code.ex:321: Code.load_file/2
    minesweeper_test.exs:2: (file)
    (elixir) lib/code.ex:363: Code.require_file/2

[33mwarning: [0mvariable i is unused
  minesweeper.exs:37

[33mwarning: [0mvariable row is unused
  minesweeper.exs:40

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:40

[33mwarning: [0mthis check/guard will always yield the same result
  minesweeper.exs:42

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:47

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:56

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[31m  * test zero size board (3.2ms)[0m

  1) test zero size board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:13[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:40: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:15: (test)

  * test empty board[31m  * test empty board (6.2ms)[0m

  2) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:40: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:22: (test)

  * test board full of mines[31m  * test board full of mines (0.04ms)[0m

  3) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:40: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (9.8ms)[0m

  4) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:40: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:36: (test)

  * test horizontal line[31m  * test horizontal line (0.1ms)[0m

  5) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:39[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:40: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:41: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.1 seconds (0.1s on load, 0.02s on tests)
[31m7 tests, 5 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:37

[33mwarning: [0mvariable row is unused
  minesweeper.exs:40

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:40

[33mwarning: [0mthis check/guard will always yield the same result
  minesweeper.exs:42

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:47

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:56

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[31m  * test zero size board (3.0ms)[0m

  1) test zero size board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:13[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:40: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:15: (test)

  * test empty board[31m  * test empty board (5.6ms)[0m

  2) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:40: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:22: (test)

  * test board full of mines[31m  * test board full of mines (0.04ms)[0m

  3) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:40: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (0.8ms)[0m

  4) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:40: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:36: (test)

  * test horizontal line[31m  * test horizontal line (1.1ms)[0m

  5) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:39[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:40: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:41: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.1 seconds (0.1s on load, 0.01s on tests)
[31m7 tests, 5 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:37

[33mwarning: [0mvariable row is unused
  minesweeper.exs:40

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:40

[33mwarning: [0mthis check/guard will always yield the same result
  minesweeper.exs:42

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:47

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:56

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[31m  * test zero size board (2.8ms)[0m

  1) test zero size board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:13[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:40: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:15: (test)

  * test empty board[31m  * test empty board (8.6ms)[0m

  2) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:40: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:22: (test)

  * test board full of mines[31m  * test board full of mines (0.05ms)[0m

  3) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:40: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (4.2ms)[0m

  4) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:40: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:36: (test)

  * test horizontal line[31m  * test horizontal line (0.2ms)[0m

  5) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:39[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:40: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:41: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.09 seconds (0.08s on load, 0.01s on tests)
[31m7 tests, 5 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:37

[33mwarning: [0mthis check/guard will always yield the same result
  minesweeper.exs:40

[33mwarning: [0mvariable row is unused
  minesweeper.exs:42

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:42

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:47

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:56

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[31m  * test zero size board (4.4ms)[0m

  1) test zero size board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:13[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:42: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:15: (test)

  * test empty board[31m  * test empty board (23.5ms)[0m

  2) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:42: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:22: (test)

  * test board full of mines[31m  * test board full of mines (0.09ms)[0m

  3) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:42: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (1.1ms)[0m

  4) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:42: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:36: (test)

  * test horizontal line[31m  * test horizontal line (0.2ms)[0m

  5) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:39[0m
     [31m** (MatchError) no match of right hand side value: nil[0m
     [36mstacktrace:[0m
       minesweeper.exs:42: Minesweeper.find_row_with_space/1
       minesweeper.exs:25: Minesweeper.find_first_space/1
       minesweeper.exs:12: Minesweeper.replace_space/1
       minesweeper_test.exs:41: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.09 seconds (0.06s on load, 0.03s on tests)
[31m7 tests, 5 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:37

[33mwarning: [0mvariable row is unused
  minesweeper.exs:42

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:42

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:47

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:56

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[31m  * test zero size board (11.9ms)[0m

  1) test zero size board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:13[0m
     [31m** (FunctionClauseError) no function clause matching in String.Unicode.graphemes/1[0m
     [36mstacktrace:[0m
       (elixir) unicode/unicode.ex:170: String.Unicode.graphemes(nil)
       minesweeper.exs:49: Minesweeper.count_horiz_bombs/2
       minesweeper.exs:16: Minesweeper.replace_space/1
       minesweeper_test.exs:15: (test)

  * test empty board[33mwarning: [0mvariable i is unused
  minesweeper.exs:38

[33mwarning: [0mvariable row is unused
  minesweeper.exs:43

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:43

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:48

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:57

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board{nil, -1}
{0, 0}
[31m  * test zero size board (47.7ms)[0m
{1, 0}
{2, 0}
{0, 1}
{1, 1}
{2, 1}
{0, 2}
{1, 2}
{2, 2}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}

  1) test zero size board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:13[0m
     [31m** (FunctionClauseError) no function clause matching in String.Unicode.graphemes/1[0m
     [36mstacktrace:[0m
       (elixir) unicode/unicode.ex:170: String.Unicode.graphemes(nil)
       minesweeper.exs:50: Minesweeper.count_horiz_bombs/2
       minesweeper.exs:17: Minesweeper.replace_space/1
       minesweeper_test.exs:15: (test)

  * test empty board{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{nil, -1}
{n[33mwarning: [0mvariable i is unused
  minesweeper.exs:40

[33mwarning: [0mvariable row is unused
  minesweeper.exs:45

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:45

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:50

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:59

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board{nil, -1}
{0, 0}
[32m  * test zero size board (9.1ms)[0m
  * test empty board{nil, -1}
[32m  * test empty board (4.2ms)[0m
  * test board full of mines{1, 1}
[32m  * test board full of mines (0.2ms)[0m
  * test surrounded{0, 0}
[31m  * test surrounded (13.0ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m [0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:36: (test)

  * test horizontal line[31m  * test horizontal line (0.6ms)[0m

  2) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:39[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["[31m [0m*[31m [0m*[31m [0m"]
     [36mrhs:  [0m["[32m1[0m*[32m2[0m*[32m1[0m"]
     [36mstacktrace:[0m
       minesweeper_test.exs:41: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.2 seconds (0.2s on load, 0.03s on tests)
[31m7 tests, 2 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:39

[33mwarning: [0mvariable row is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:44

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:58

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (12.3ms)[0m
  * test empty board[32m  * test empty board (0.6ms)[0m
  * test board full of mines[32m  * test board full of mines (0.04ms)[0m
  * test surrounded[31m  * test surrounded (14.8ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m [0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:36: (test)

  * test horizontal line[31m  * test horizontal line (0.3ms)[0m

  2) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:39[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["[31m [0m*[31m [0m*[31m [0m"]
     [36mrhs:  [0m["[32m1[0m*[32m2[0m*[32m1[0m"]
     [36mstacktrace:[0m
       minesweeper_test.exs:41: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.2 seconds (0.2s on load, 0.02s on tests)
[31m7 tests, 2 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:40

[33mwarning: [0mvariable row is unused
  minesweeper.exs:45

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:45

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:50

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:59

[33mwarning: [0mmodule attribute @pending in code block has no effect as it is never returned (remove the attribute or assign it to _ to avoid warnings)
  minesweeper_test.exs:13

[33mwarning: [0mmodule attribute @pending in code block has no effect as it is never returned (remove the attribute or assign it to _ to avoid warnings)
  minesweeper_test.exs:19

[33mwarning: [0mmodule attribute @pending in code block has no effect as it is never returned (remove the attribute or assign it to _ to avoid warnings)
  minesweeper_test.exs:27

[33mwarning: [0mmodule attribute @pending in code block has no effect as it is never returned (remove the attribute or assign it to _ to avoid warnings)
  minesweeper_test.exs:42

[33mwarning: [0mundefined module attribute @pending, please remove access to @pending or explicitly set it before access
  minesweeper_test.exs:13: MinesweeperTest (module)

[33mwarning: [0mundefined module attribute @pending, please remove access to @pending or explicitly set it before access
  minesweeper_test.exs:19: MinesweeperTest (module)

[33mwarning: [0mundefined module attribute @pending, please remove access to @pending or explicitly set it before access
  minesweeper_test.exs:27: MinesweeperTest (module)

[33mwarning: [0mundefined module attribute @pending, please remove access to @pending or explicitly set it before access
  minesweeper_test.exs:42: MinesweeperTest (module)

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board{nil, -1}
{0, 0}
{nil, -1}
{1, 1}
[32m  * test zero size board (18.0ms)[0m
  * test empty board{0, 0}
[32m  * test empty board (0.6ms)[0m
  * test board full of mines[32m  * test board full of mines (0.1ms)[0m
  * test surrounded[31m  * test surrounded (16.0ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m [0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line[31m  * test horizontal line (2.7ms)[0m

  2) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:43[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["[31m [0m*[31m [0m*[31m [0m"]
     [36mrhs:  [0m["[32m1[0m*[32m2[0m*[32m1[0m"]
     [36mstacktrace:[0m
       minesweeper_test.exs:45: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.3 seconds (0.3s on load, 0.04s on tests)
[31m7 tests, 2 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:40

[33mwarning: [0mvariable row is unused
  minesweeper.exs:45

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:45

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:50

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:59

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded[31m  * test surrounded (24.1ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m [0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.2 seconds (0.2s on load, 0.02s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:40

[33mwarning: [0mvariable row is unused
  minesweeper.exs:45

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:45

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:50

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded{1, 1}
[31m  * test surrounded (17.9ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m [0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.3 seconds (0.2s on load, 0.02s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:41

[33mwarning: [0mvariable row is unused
  minesweeper.exs:46

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:46

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:51

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
  * test board full of mines  * test board full of mines (skipped)
{1, 1}
  * test surrounded[31m  * test surrounded (19.6ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m [0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.1 seconds (0.1s on load, 0.02s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:41

[33mwarning: [0mvariable row is unused
  minesweeper.exs:46

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:46

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:51

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded[31m  * test surrounded (18.8ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m [0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.2 seconds (0.2s on load, 0.01s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:43

[33mwarning: [0mvariable row is unused
  minesweeper.exs:48

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:48

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:53

** (CompileError) minesweeper.exs:20: undefined function horiz_bombs/0
    (stdlib) lists.erl:1338: :lists.foreach/2
    (stdlib) erl_eval.erl:670: :erl_eval.do_apply/6

[33mwarning: [0mvariable i is unused
  minesweeper.exs:43

[33mwarning: [0mvariable row is unused
  minesweeper.exs:48

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:48

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:53

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded{1, 1}
[31m  * test surrounded (16.2ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m [0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.2 seconds (0.1s on load, 0.01s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:43

[33mwarning: [0mvariable row is unused
  minesweeper.exs:48

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:48

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:53

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded[31m  * test surrounded (23.9ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m [0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.09 seconds (0.07s on load, 0.02s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:43

[33mwarning: [0mvariable row is unused
  minesweeper.exs:48

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:48

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:53

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded[31m  * test surrounded (5.8ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m [0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.05 seconds (0.05s on load, 0.00s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:43

[33mwarning: [0mvariable row is unused
  minesweeper.exs:48

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:48

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:53

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded[31m  * test surrounded (6.1ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m [0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
  * test board full of mines  * test board full of mines (skipped)
{1, 1}
no space
  * test surrounded[31m  * test surrounded (6.1ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m [0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded[31m  * test surrounded (7.6ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31m** (MatchError) no match of right hand side value: {1, 1}[0m
     [36mstacktrace:[0m
       minesweeper.exs:17: Minesweeper.replace_space/1
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.08 seconds (0.08s on load, 0.00s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
horiz_bombs
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded[31m  * test surrounded (11.4ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31m** (Protocol.UndefinedError) protocol String.Chars not implemented for {1, 1}[0m
     [36mstacktrace:[0m
       (elixir) lib/string/chars.ex:3: String.Chars.impl_for!/1
       (elixir) lib/string/chars.ex:17: String.Chars.to_string/1
       minesweeper.exs:64: Minesweeper.replace_space_w_count/3
       minesweeper.exs:23: Minesweeper.replace_space/1
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.09 seconds (0.08s on load, 0.01s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded{1, 1}
horiz_bombs
[31m  * test surrounded (30.8ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31m** (Protocol.UndefinedError) protocol String.Chars not implemented for {1, 1}[0m
     [36mstacktrace:[0m
       (elixir) lib/string/chars.ex:3: String.Chars.impl_for!/1
       (elixir) lib/string/chars.ex:17: String.Chars.to_string/1
       minesweeper.exs:64: Minesweeper.replace_space_w_count/3
       minesweeper.exs:23: Minesweeper.replace_space/1
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.08 seconds (0.05s on load, 0.03s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
horiz_bombs
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded[31m  * test surrounded (17.7ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31m** (Protocol.UndefinedError) protocol String.Chars not implemented for {1, 1}[0m
     [36mstacktrace:[0m
       (elixir) lib/string/chars.ex:3: String.Chars.impl_for!/1
       (elixir) lib/string/chars.ex:17: String.Chars.to_string/1
       minesweeper.exs:64: Minesweeper.replace_space_w_count/3
       minesweeper.exs:23: Minesweeper.replace_space/1
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.06 seconds (0.05s on load, 0.01s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
horiz_bombs
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded[31m  * test surrounded (13.1ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31m** (Protocol.UndefinedError) protocol String.Chars not implemented for {1, 1}[0m
     [36mstacktrace:[0m
       (elixir) lib/string/chars.ex:3: String.Chars.impl_for!/1
       (elixir) lib/string/chars.ex:17: String.Chars.to_string/1
       minesweeper.exs:64: Minesweeper.replace_space_w_count/3
       minesweeper.exs:23: Minesweeper.replace_space/1
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.09 seconds (0.08s on load, 0.01s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
horiz_bombs
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded[31m  * test surrounded (8.0ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31m** (UndefinedFunctionError) function IO.inspec/1 is undefined or private. Did you mean one of:
     
           * inspect/1
           * inspect/2
           * inspect/3
     [0m
     [36mstacktrace:[0m
       (elixir) IO.inspec({1, 1})
       minesweeper.exs:64: Minesweeper.replace_space_w_count/3
       minesweeper.exs:23: Minesweeper.replace_space/1
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
  * test board full of mines{1, 1}
horiz_bombs
  * test board full of mines (skipped)
  * test surrounded{1, 1}
[31m  * test surrounded (29.5ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31m** (Protocol.UndefinedError) protocol String.Chars not implemented for {1, 1}[0m
     [36mstacktrace:[0m
       (elixir) lib/string/chars.ex:3: String.Chars.impl_for!/1
       (elixir) lib/string/chars.ex:17: String.Chars.to_string/1
       minesweeper.exs:64: Minesweeper.replace_space_w_count/3
       minesweeper.exs:23: Minesweeper.replace_space/1
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.08 seconds (0.06s on load, 0.02s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:63

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board{1, 1}
  * test empty board (skipped)
horiz_bombs
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded{nil, -1}
no space
[31m  * test surrounded (10.8ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m0[0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.1 seconds (0.09s on load, 0.01s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:64

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
horiz_bombs
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded[31m  * test surrounded (10.4ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31m** (UndefinedFunctionError) function :math.abs/1 is undefined or private[0m
     [36mstacktrace:[0m
       (stdlib) :math.abs(-1)
       minesweeper.exs:59: anonymous fn/2 in Minesweeper.count_horiz_bombs/2
       (elixir) lib/enum.ex:492: anonymous fn/3 in Enum.count/2
       (elixir) lib/enum.ex:2843: Enumerable.List.reduce/3
       (elixir) lib/enum.ex:491: Enum.count/2
       minesweeper.exs:22: Minesweeper.replace_space/1
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.09 seconds (0.08s on load, 0.01s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:64

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
  * test board full of mines  * test board full of mines (skipped)
{1, 1}
  * test surroundedhoriz_bombs
coords diff 1
coords diff 0
coords diff 1
{nil, -1}
no space
[31m  * test surrounded (8.5ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m0[0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.06 seconds (0.06s on load, 0.00s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:64

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
  * test board full of mines{1, 1}
horiz_bombs
  * test board full of mines (skipped)
  * test surroundedcoords diff 1
coords diff 0
coords diff 1
{nil, -1}
no space
[31m  * test surrounded (9.4ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m0[0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:64

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
horiz_bombs
  * test board full of mines  * test board full of mines (skipped)
  * test surroundedcoords diff 1
coords diff 0
coords diff 1
{nil, -1}
no space
[31m  * test surrounded (16.6ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m0[0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.08 seconds (0.07s on load, 0.01s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:64

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
  * test board full of mines{1, 1}
horiz_bombs
  * test board full of mines (skipped)
  * test surroundedcoords diff 1 for *
coords diff 0 for  
coords diff 1 for *
{nil, -1}
no space
[31m  * test surrounded (10.5ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m0[0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.09 seconds (0.08s on load, 0.01s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:64

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
horiz_bombs
  * test board full of mines  * test board full of mines (skipped)
  * test surroundedcoords diff 1 for *
coords diff 0 for  
coords diff 1 for *
{nil, -1}
no space
[31m  * test surrounded (14.1ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m0[0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.1 seconds (0.09s on load, 0.01s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:64

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
horiz_bombs
  * test board full of mines  * test board full of mines (skipped)
  * test surroundedcoords diff 1 for *
false
coords diff 0 for  
false
coords diff 1 for *
false
{nil, -1}
no space
[31m  * test surrounded (27.1ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m0[0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.08 seconds (0.06s on load, 0.02s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:64

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
horiz_bombs
  * test board full of mines  * test board full of mines (skipped)
  * test surroundedcoords diff 1 for *
false
coords diff 0 for  
false
coords diff 1 for *
false
{nil, -1}
no space
[31m  * test surrounded (10.8ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m0[0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.1 seconds (0.09s on load, 0.01s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:64

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board{1, 1}
  * test empty board (skipped)
horiz_bombs
  * test board full of mines  * test board full of mines (skipped)
coords diff 1 for *
  * test surrounded[31m  * test surrounded (14.3ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31m** (UndefinedFunctionError) function :math.abs/1 is undefined or private[0m
     [36mstacktrace:[0m
       (stdlib) :math.abs(-1)
       minesweeper.exs:60: anonymous fn/2 in Minesweeper.count_horiz_bombs/2
       (elixir) lib/enum.ex:492: anonymous fn/3 in Enum.count/2
       (elixir) lib/enum.ex:2843: Enumerable.List.reduce/3
       (elixir) lib/enum.ex:491: Enum.count/2
       minesweeper.exs:22: Minesweeper.replace_space/1
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.08 seconds (0.07s on load, 0.01s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:64

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
horiz_bombs
  * test board full of mines  * test board full of mines (skipped)
  * test surroundedcoords diff 1 for *
true
coords diff 0 for  
false
coords diff 1 for *
true
{nil, -1}
no space
[31m  * test surrounded (16.1ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m2[0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.07 seconds (0.06s on load, 0.01s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
** (CompileError) minesweeper.exs:67: for comprehensions must start with a generator
    (elixir) src/elixir_for.erl:71: :elixir_for.translate/4

[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:63

[33mwarning: [0mthis clause cannot match because a previous clause at line 54 always matches
  minesweeper.exs:63

[33mwarning: [0mvariable n is unused
  minesweeper.exs:65

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:77

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
horiz_bombs
  * test board full of mines  * test board full of mines (skipped)
  * test surroundedtrue
false
true
{nil, -1}
no space
[31m  * test surrounded (10.4ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m["***", "*[31m2[0m*", "***"]
     [36mrhs:  [0m["***", "*[32m8[0m*", "***"]
     [36mstacktrace:[0m
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.1 seconds (0.1s on load, 0.01s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable n is unused
  minesweeper.exs:56

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:69

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
  * test board full of mines{1, 1}
  * test board full of mines (skipped)
horiz_bombs
  * test surrounded[31m  * test surrounded (13.2ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31m** (FunctionClauseError) no function clause matching in String.Unicode.graphemes/1[0m
     [36mstacktrace:[0m
       (elixir) unicode/unicode.ex:170: String.Unicode.graphemes({"***", 0})
       minesweeper.exs:60: anonymous fn/3 in Minesweeper.count_bombs/2
       (elixir) lib/enum.ex:1623: Enum."-reduce/3-lists^foldl/2-0-"/3
       minesweeper.exs:58: Minesweeper.count_bombs/2
       minesweeper.exs:22: Minesweeper.replace_space/1
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.08 seconds (0.07s on load, 0.01s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable n is unused
  minesweeper.exs:56

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:69

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
horiz_bombs
  * test board full of mines  * test board full of mines (skipped)
  * test surrounded[31m  * test surrounded (7.6ms)[0m

  1) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:35[0m
     [31m** (FunctionClauseError) no function clause matching in String.Unicode.graphemes/1[0m
     [36mstacktrace:[0m
       (elixir) unicode/unicode.ex:170: String.Unicode.graphemes({"***", 0})
       minesweeper.exs:60: anonymous fn/3 in Minesweeper.count_bombs/2
       (elixir) lib/enum.ex:1623: Enum."-reduce/3-lists^foldl/2-0-"/3
       minesweeper.exs:58: Minesweeper.count_bombs/2
       minesweeper.exs:22: Minesweeper.replace_space/1
       minesweeper_test.exs:39: (test)

  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.09 seconds (0.09s on load, 0.00s on tests)
[31m7 tests, 1 failure, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable n is unused
  minesweeper.exs:56

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:58

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:69

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
{1, 1}
horiz_bombs
  * test board full of mines  * test board full of mines (skipped)
  * test surroundedtrue
true
true
true
false
true
true
true
true
{nil, -1}
no space
[32m  * test surrounded (15.5ms)[0m
  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.1 seconds (0.09s on load, 0.01s on tests)
[32m7 tests, 0 failures, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:42

[33mwarning: [0mvariable row is unused
  minesweeper.exs:47

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:47

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:52

[33mwarning: [0mvariable n is unused
  minesweeper.exs:54

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:56

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:67

Excluding tags: [:pending]


MinesweeperTest
  * test zero size boardhoriz_bombs
  * test zero size board (skipped)
  * test empty board  * test empty board (skipped)
  * test board full of minesno space
  * test board full of mines (skipped)
  * test surrounded[32m  * test surrounded (8.2ms)[0m
  * test horizontal line  * test horizontal line (skipped)
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[32m7 tests, 0 failures, 6 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:42

[33mwarning: [0mvariable row is unused
  minesweeper.exs:47

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:47

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:52

[33mwarning: [0mvariable n is unused
  minesweeper.exs:54

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:56

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:67

Excluding tags: [:pending]


MinesweeperTest
  * test zero size boardno space
horiz_bombs
[32m  * test zero size board (3.2ms)[0m
horiz_bombs
  * test empty boardhoriz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
no space
no space
[31m  * test empty board (13.4ms)[0m
horiz_bombs
no space
horiz_bombs
horiz_bombs
horiz_bombs
no space

  1) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m[[31m"000"[0m, [31m"000"[0m, [31m"000"[0m]
     [36mrhs:  [0m[[32m"   "[0m, [32m"   "[0m, [32m"   "[0m]
     [36mstacktrace:[0m
       minesweeper_test.exs:22: (test)

  * test board full of mines[32m  * test board full of mines (0.06ms)[0m
  * test surrounded[32m  * test surrounded (0.1ms)[0m
  * test horizontal line[32m  * test horizontal line (0.1ms)[0m
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.09 seconds (0.08s on load, 0.01s on tests)
[31m7 tests, 1 failure, 2 skipped[0m

Randomized with seed 0
** (SyntaxError) minesweeper.exs:85: unexpected token: end
    (elixir) lib/code.ex:321: Code.load_file/2
    minesweeper_test.exs:2: (file)
    (elixir) lib/code.ex:363: Code.require_file/2

[33mwarning: [0mvariable i is unused
  minesweeper.exs:42

[33mwarning: [0mvariable row is unused
  minesweeper.exs:47

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:47

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:52

[33mwarning: [0mvariable n is unused
  minesweeper.exs:54

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:56

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:67

[33mwarning: [0mvariable repacement_char is unused
  minesweeper.exs:68

** (CompileError) minesweeper.exs:79: undefined function replacement_char/0
    (stdlib) lists.erl:1338: :lists.foreach/2
    (stdlib) erl_eval.erl:670: :erl_eval.do_apply/6

[33mwarning: [0mvariable i is unused
  minesweeper.exs:42

[33mwarning: [0mvariable row is unused
  minesweeper.exs:47

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:47

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:52

[33mwarning: [0mvariable n is unused
  minesweeper.exs:54

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:56

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:67

Excluding tags: [:pending]


MinesweeperTest
  * test zero size boardno space
horiz_bombs
horiz_bombs
[32m  * test zero size board (2.7ms)[0m
  * test empty boardhoriz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
no space
no space
[31m  * test empty board (8.2ms)[0m
horiz_bombs
no space
horiz_bombs
horiz_bombs
horiz_bombs
no space

  1) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31mAssertion with == failed[0m
     [36mcode: [0mMinesweeper.annotate(clean(b)) == b
     [36mlhs:  [0m[[31m"XXX"[0m, [31m"XXX"[0m, [31m"XXX"[0m]
     [36mrhs:  [0m[[32m"   "[0m, [32m"   "[0m, [32m"   "[0m]
     [36mstacktrace:[0m
       minesweeper_test.exs:22: (test)

  * test board full of mines[32m  * test board full of mines (0.05ms)[0m
  * test surrounded[32m  * test surrounded (0.3ms)[0m
  * test horizontal line[32m  * test horizontal line (6.9ms)[0m
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.1 seconds (0.1s on load, 0.01s on tests)
[31m7 tests, 1 failure, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable row is unused
  minesweeper.exs:10

[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable n is unused
  minesweeper.exs:56

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:58

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:69

Excluding tags: [:pending]


MinesweeperTest
  * test zero size boardno space
horiz_bombs
horiz_bombs
[32m  * test zero size board (2.4ms)[0m
  * test empty boardhoriz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
no space
no space
[31m  * test empty board (9.5ms)[0m
horiz_bombs
no space
horiz_bombs
horiz_bombs
horiz_bombs
no space

  1) test empty board (MinesweeperTest)
     [1m[30mminesweeper_test.exs:18[0m
     [31m** (UndefinedFunctionError) function String.replace/2 is undefined or private. Did you mean one of:
     
           * replace/3
           * replace/4
     [0m
     [36mstacktrace:[0m
       (elixir) String.replace("X", " ")
       (elixir) lib/enum.ex:1184: Enum."-map/2-lists^map/1-0-"/2
       minesweeper_test.exs:22: (test)

  * test board full of mines[31m  * test board full of mines (0.3ms)[0m

  2) test board full of mines (MinesweeperTest)
     [1m[30mminesweeper_test.exs:25[0m
     [31m** (UndefinedFunctionError) function String.replace/2 is undefined or private. Did you mean one of:
     
           * replace/3
           * replace/4
     [0m
     [36mstacktrace:[0m
       (elixir) String.replace("X", " ")
       (elixir) lib/enum.ex:1184: Enum."-map/2-lists^map/1-0-"/2
       minesweeper_test.exs:29: (test)

  * test surrounded[31m  * test surrounded (0.4ms)[0m

  3) test surrounded (MinesweeperTest)
     [1m[30mminesweeper_test.exs:32[0m
     [31m** (UndefinedFunctionError) function String.replace/2 is undefined or private. Did you mean one of:
     
           * replace/3
           * replace/4
     [0m
     [36mstacktrace:[0m
       (elixir) String.replace("X", " ")
       (elixir) lib/enum.ex:1184: Enum."-map/2-lists^map/1-0-"/2
       minesweeper_test.exs:36: (test)

  * test horizontal line[31m  * test horizontal line (4.8ms)[0m

  4) test horizontal line (MinesweeperTest)
     [1m[30mminesweeper_test.exs:39[0m
     [31m** (UndefinedFunctionError) function String.replace/2 is undefined or private. Did you mean one of:
     
           * replace/3
           * replace/4
     [0m
     [36mstacktrace:[0m
       (elixir) String.replace("X", " ")
       (elixir) lib/enum.ex:1184: Enum."-map/2-lists^map/1-0-"/2
       minesweeper_test.exs:41: (test)

  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.1 seconds (0.1s on load, 0.01s on tests)
[31m7 tests, 4 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable n is unused
  minesweeper.exs:56

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:58

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:69

Excluding tags: [:pending]


MinesweeperTest
  * test zero size boardno space
horiz_bombs
horiz_bombs
[32m  * test zero size board (2.4ms)[0m
  * test empty boardhoriz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
no space
no space
[32m  * test empty board (3.4ms)[0m
horiz_bombs
  * test board full of minesno space
[32m  * test board full of mines (0.07ms)[0m
  * test surroundedhoriz_bombs
horiz_bombs
[32m  * test surrounded (0.1ms)[0m
horiz_bombs
  * test horizontal lineno space
[32m  * test horizontal line (0.2ms)[0m
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.07 seconds (0.07s on load, 0.00s on tests)
[32m7 tests, 0 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:44

[33mwarning: [0mvariable row is unused
  minesweeper.exs:49

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:49

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:54

[33mwarning: [0mvariable n is unused
  minesweeper.exs:56

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:58

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:69

Excluding tags: [:pending]


MinesweeperTest
  * test zero size boardno space
horiz_bombs
horiz_bombs
[32m  * test zero size board (2.5ms)[0m
  * test empty boardhoriz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
horiz_bombs
no space
no space
[32m  * test empty board (3.2ms)[0m
horiz_bombs
  * test board full of minesno space
[32m  * test board full of mines (0.07ms)[0m
  * test surroundedhoriz_bombs
horiz_bombs
[32m  * test surrounded (0.3ms)[0m
horiz_bombs
  * test horizontal lineno space
[32m  * test horizontal line (0.2ms)[0m
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.08 seconds (0.08s on load, 0.00s on tests)
[32m7 tests, 0 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:41

[33mwarning: [0mvariable row is unused
  minesweeper.exs:46

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:46

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:51

[33mwarning: [0mvariable n is unused
  minesweeper.exs:53

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:55

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:66

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (3.0ms)[0m
  * test empty board[32m  * test empty board (4.0ms)[0m
  * test board full of mines[32m  * test board full of mines (0.04ms)[0m
  * test surrounded[32m  * test surrounded (0.1ms)[0m
  * test horizontal line[32m  * test horizontal line (0.3ms)[0m
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.09 seconds (0.09s on load, 0.00s on tests)
[32m7 tests, 0 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:41

[33mwarning: [0mvariable row is unused
  minesweeper.exs:46

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:46

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:51

[33mwarning: [0mvariable n is unused
  minesweeper.exs:53

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:55

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:66

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (6.1ms)[0m
  * test empty board[32m  * test empty board (4.2ms)[0m
  * test board full of mines[32m  * test board full of mines (0.04ms)[0m
  * test surrounded[32m  * test surrounded (0.1ms)[0m
  * test horizontal line[32m  * test horizontal line (0.1ms)[0m
  * test vertical line  * test vertical line (skipped)
  * test cross  * test cross (skipped)


Finished in 0.08 seconds (0.07s on load, 0.01s on tests)
[32m7 tests, 0 failures, 2 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:41

[33mwarning: [0mvariable row is unused
  minesweeper.exs:46

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:46

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:51

[33mwarning: [0mvariable n is unused
  minesweeper.exs:53

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:55

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:66

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (2.4ms)[0m
  * test empty board[32m  * test empty board (3.1ms)[0m
  * test board full of mines[32m  * test board full of mines (0.03ms)[0m
  * test surrounded[32m  * test surrounded (0.09ms)[0m
  * test horizontal line[32m  * test horizontal line (0.2ms)[0m
  * test vertical line[32m  * test vertical line (0.2ms)[0m
  * test cross  * test cross (skipped)


Finished in 0.09 seconds (0.09s on load, 0.00s on tests)
[32m7 tests, 0 failures, 1 skipped[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:41

[33mwarning: [0mvariable row is unused
  minesweeper.exs:46

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:46

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:51

[33mwarning: [0mvariable n is unused
  minesweeper.exs:53

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:55

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:66

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (3.0ms)[0m
  * test empty board[32m  * test empty board (3.9ms)[0m
  * test board full of mines[32m  * test board full of mines (0.04ms)[0m
  * test surrounded[32m  * test surrounded (0.1ms)[0m
  * test horizontal line[32m  * test horizontal line (0.1ms)[0m
  * test vertical line[32m  * test vertical line (0.1ms)[0m
  * test cross[32m  * test cross (0.6ms)[0m


Finished in 0.08 seconds (0.08s on load, 0.00s on tests)
[32m7 tests, 0 failures[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:41

[33mwarning: [0mvariable row is unused
  minesweeper.exs:46

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:46

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:51

[33mwarning: [0mvariable n is unused
  minesweeper.exs:53

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:55

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:66

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (3.3ms)[0m
  * test empty board[32m  * test empty board (4.7ms)[0m
  * test board full of mines[32m  * test board full of mines (0.05ms)[0m
  * test surrounded[32m  * test surrounded (0.09ms)[0m
  * test horizontal line[32m  * test horizontal line (0.1ms)[0m
  * test vertical line[32m  * test vertical line (0.3ms)[0m
  * test cross[32m  * test cross (0.7ms)[0m


Finished in 0.1 seconds (0.09s on load, 0.01s on tests)
[32m7 tests, 0 failures[0m

Randomized with seed 0
[33mwarning: [0mvariable i is unused
  minesweeper.exs:41

[33mwarning: [0mvariable row is unused
  minesweeper.exs:46

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:46

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:51

[33mwarning: [0mvariable n is unused
  minesweeper.exs:53

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:55

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:66

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (12.1ms)[0m
  * test empty board[32m  * test empty board (10.6ms)[0m
  * test board full of mines[32m  * test board full of mines (0.08ms)[0m
  * test surrounded[32m  * test surrounded (0.1ms)[0m
  * test horizontal line[32m  * test horizontal line (0.1ms)[0m
  * test vertical line[32m  * test vertical line (1.4ms)[0m
  * test cross[32m  * test cross (1.7ms)[0m


Finished in 0.08 seconds (0.06s on load, 0.02s on tests)
[32m7 tests, 0 failures[0m

Randomized with seed 0
[33mwarning: [0mvariable row is unused
  minesweeper.exs:46

[33mwarning: [0mvariable row_index is unused
  minesweeper.exs:46

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:51

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:66

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (2.5ms)[0m
  * test empty board[32m  * test empty board (3.2ms)[0m
  * test board full of mines[32m  * test board full of mines (0.03ms)[0m
  * test surrounded[32m  * test surrounded (0.09ms)[0m
  * test horizontal line[32m  * test horizontal line (0.2ms)[0m
  * test vertical line[32m  * test vertical line (0.3ms)[0m
  * test cross[32m  * test cross (0.6ms)[0m


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[32m7 tests, 0 failures[0m

Randomized with seed 0
[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:51

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:66

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (3.2ms)[0m
  * test empty board[32m  * test empty board (3.2ms)[0m
  * test board full of mines[32m  * test board full of mines (0.04ms)[0m
  * test surrounded[32m  * test surrounded (0.1ms)[0m
  * test horizontal line[32m  * test horizontal line (0.1ms)[0m
  * test vertical line[32m  * test vertical line (0.2ms)[0m
  * test cross[32m  * test cross (0.5ms)[0m


Finished in 0.1 seconds (0.1s on load, 0.00s on tests)
[32m7 tests, 0 failures[0m

Randomized with seed 0
[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:51

[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:66

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (2.0ms)[0m
  * test empty board[32m  * test empty board (3.0ms)[0m
  * test board full of mines[32m  * test board full of mines (0.03ms)[0m
  * test surrounded[32m  * test surrounded (0.1ms)[0m
  * test horizontal line[32m  * test horizontal line (0.2ms)[0m
  * test vertical line[32m  * test vertical line (0.2ms)[0m
  * test cross[32m  * test cross (0.5ms)[0m


Finished in 0.09 seconds (0.09s on load, 0.00s on tests)
[32m7 tests, 0 failures[0m

Randomized with seed 0
[33mwarning: [0mvariable space_coords is unused
  minesweeper.exs:66

Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (2.3ms)[0m
  * test empty board[32m  * test empty board (3.2ms)[0m
  * test board full of mines[32m  * test board full of mines (0.05ms)[0m
  * test surrounded[32m  * test surrounded (0.1ms)[0m
  * test horizontal line[32m  * test horizontal line (0.2ms)[0m
  * test vertical line[32m  * test vertical line (0.3ms)[0m
  * test cross[32m  * test cross (0.5ms)[0m


Finished in 0.08 seconds (0.08s on load, 0.00s on tests)
[32m7 tests, 0 failures[0m

Randomized with seed 0
Excluding tags: [:pending]


MinesweeperTest
  * test zero size board[32m  * test zero size board (2.1ms)[0m
  * test empty board[32m  * test empty board (2.8ms)[0m
  * test board full of mines[32m  * test board full of mines (0.04ms)[0m
  * test surrounded[32m  * test surrounded (0.07ms)[0m
  * test horizontal line[32m  * test horizontal line (0.1ms)[0m
  * test vertical line[32m  * test vertical line (0.1ms)[0m
  * test cross[32m  * test cross (0.5ms)[0m


Finished in 0.05 seconds (0.05s on load, 0.00s on tests)
[32m7 tests, 0 failures[0m

Randomized with seed 0
